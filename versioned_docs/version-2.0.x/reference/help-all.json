{
  "name_to_goal_info": {
    "awslambda": {
      "consumed_scopes": [
        "",
        "awslambda",
        "download-pex-bin",
        "grpc_python_plugin",
        "lambdex",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "Deprecated in favor of the `package` goal.",
      "is_implemented": true,
      "name": "awslambda"
    },
    "binary": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "lambdex",
        "pex",
        "pex-binary-defaults",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "setup-py-generation",
        "setuptools",
        "source",
        "subprocess-environment"
      ],
      "description": "Deprecated in favor of the `package` goal.",
      "is_implemented": true,
      "name": "binary"
    },
    "count-loc": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "scc",
        "source",
        "subprocess-environment"
      ],
      "description": "Count lines of code.",
      "is_implemented": true,
      "name": "count-loc"
    },
    "dependees": {
      "consumed_scopes": [
        "",
        "dependees",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "List all targets that depend on any of the input files/targets.",
      "is_implemented": true,
      "name": "dependees"
    },
    "dependencies": {
      "consumed_scopes": [
        "",
        "dependencies",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "List the dependencies of the input files/targets.",
      "is_implemented": true,
      "name": "dependencies"
    },
    "filedeps": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "filedeps",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "List all source and BUILD files a target depends on.",
      "is_implemented": true,
      "name": "filedeps"
    },
    "filter": {
      "consumed_scopes": ["", "filter"],
      "description": "Filter the input targets based on various criteria.",
      "is_implemented": true,
      "name": "filter"
    },
    "fmt": {
      "consumed_scopes": [
        "",
        "black",
        "docformatter",
        "download-pex-bin",
        "fmt",
        "grpc_python_plugin",
        "isort",
        "pex",
        "protoc",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "Autoformat source code.",
      "is_implemented": true,
      "name": "fmt"
    },
    "lint": {
      "consumed_scopes": [
        "",
        "bandit",
        "black",
        "docformatter",
        "download-pex-bin",
        "flake8",
        "grpc_python_plugin",
        "isort",
        "lint",
        "pex",
        "protoc",
        "pylint",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "Run all linters and/or formatters in check mode.",
      "is_implemented": true,
      "name": "lint"
    },
    "list": {
      "consumed_scopes": ["", "list"],
      "description": "Lists all targets matching the file or target arguments.",
      "is_implemented": true,
      "name": "list"
    },
    "package": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "lambdex",
        "pex",
        "pex-binary-defaults",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "setup-py-generation",
        "setuptools",
        "source",
        "subprocess-environment"
      ],
      "description": "Create a distributable package.",
      "is_implemented": true,
      "name": "package"
    },
    "repl": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "ipython",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "repl",
        "source",
        "subprocess-environment"
      ],
      "description": "Open a REPL with the specified code loadable.",
      "is_implemented": true,
      "name": "repl"
    },
    "roots": {
      "consumed_scopes": ["roots", "source"],
      "description": "List the repo's registered source roots.",
      "is_implemented": true,
      "name": "roots"
    },
    "run": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "pex-binary-defaults",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "run",
        "source",
        "subprocess-environment"
      ],
      "description": "Runs a binary target.",
      "is_implemented": true,
      "name": "run"
    },
    "setup-py": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "setup-py",
        "setup-py-generation",
        "setuptools",
        "source",
        "subprocess-environment"
      ],
      "description": "Deprecated in favor of the `package` goal.",
      "is_implemented": true,
      "name": "setup-py"
    },
    "test": {
      "consumed_scopes": [
        "",
        "coverage-py",
        "download-pex-bin",
        "grpc_python_plugin",
        "lambdex",
        "pex",
        "pex-binary-defaults",
        "protoc",
        "pytest",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "setup-py-generation",
        "setuptools",
        "source",
        "subprocess-environment",
        "test"
      ],
      "description": "Run tests.",
      "is_implemented": true,
      "name": "test"
    },
    "typecheck": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "mypy",
        "pex",
        "protoc",
        "python-infer",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "subprocess-environment"
      ],
      "description": "Run type checkers.",
      "is_implemented": true,
      "name": "typecheck"
    },
    "validate": {
      "consumed_scopes": [
        "",
        "download-pex-bin",
        "grpc_python_plugin",
        "pex",
        "protoc",
        "python-native-code",
        "python-protobuf",
        "python-repos",
        "python-setup",
        "source",
        "sourcefile-validation",
        "subprocess-environment",
        "validate"
      ],
      "description": "Validate sources against regexes.",
      "is_implemented": true,
      "name": "validate"
    }
  },
  "name_to_target_type_info": {
    "archive": {
      "alias": "archive",
      "description": "A ZIP or TAR file containing loose files and code packages.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "output_path",
          "default": null,
          "description": "Where the built asset should be located. If undefined, this will use the path to the the BUILD, followed by the target name. For example, `src/python/project:app` would be `src.python.project/app.ext`. When running `./pants package`, this path will be prefixed by `--distdir` (e.g. `dist/`). Warning: setting this value risks naming collisions with other package targets you may have.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "packages",
          "default": null,
          "description": "Addresses to any targets that can be built with `./pants package`. Pants will build the assets as if you had run `./pants package`. It will include the results in your archive using the same name they would normally have, but without the `--distdir` prefix (e.g. `dist/`). You can include anything that can be built by `./pants package`, e.g. a `pex_binary`, `python_awslambda`, or even another `archive`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "files",
          "default": null,
          "description": "Addresses to any `files` or `relocated_files` targets to include in the archive, e.g. `[\"resources:logo\"]`. This is useful to include any loose files, like data files, image assets, or config files. This will ignore any targets that are not `files` or `relocated_files` targets. If you instead want those files included in any packages specified in the `packages` field for this target, then use a `resources` target and have the original package depend on the resources.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "format",
          "default": null,
          "description": "The type of archive file to be generated.",
          "required": true,
          "type_hint": "'tar' | 'tar.bz2' | 'tar.gz' | 'tar.xz' | 'zip'"
        }
      ],
      "summary": "A ZIP or TAR file containing loose files and code packages."
    },
    "files": {
      "alias": "files",
      "description": "Loose files that live outside code packages.\n\nFiles are placed directly in archives, outside of code artifacts such as Python wheels or JVM\nJARs. The sources of a `files` target are accessed via filesystem APIs, such as Python's\n`open()`, via paths relative to the repo root.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": true,
          "type_hint": "Iterable[str]"
        }
      ],
      "summary": "Loose files that live outside code packages."
    },
    "mypy_source_plugin": {
      "alias": "mypy_source_plugin",
      "description": "A MyPy plugin loaded through source code.\n\nTo load a source plugin:\n\n    1. Write your plugin. See https://mypy.readthedocs.io/en/stable/extending_mypy.html.\n    2. Define a `mypy_source_plugin` target with the plugin's Python file(s) included in the\n        `sources` field.\n    3. Add `plugins = path.to.module` to your MyPy config file, using the name of the module\n        without source roots. For example, if your Python file is called\n        `pants-plugins/mypy_plugins/custom_plugin.py`, and you set `pants-plugins` as a source root,\n        then set `plugins = mypy_plugins.custom_plugin`. Set the `config`\n        option in the `[mypy]` scope to point to your MyPy config file.\n    4. Set the option `source_plugins` in the `[mypy]` scope to include this target's\n        address, e.g. `source_plugins = [\"pants-plugins/mypy_plugins:plugin\"]`.\n\nTo instead load a third-party plugin, set the option `extra_requirements` in the `[mypy]`\nscope (see https://www.pantsbuild.org/v2.0/docs/python-typecheck-goal). Set `plugins` in\nyour config file, like you'd do with a source plugin.\n\nThis target type is treated similarly to a `python_library` target. For example, Python linters\nand formatters will run on this target.\n\nYou can depend on other targets and Pants's dependency inference will add them to the `dependencies` field,\nincluding any third-party requirements and `python_library` targets (even if their source files live in a different\ndirectory).\n\nOther targets can depend on this target. This allows you to write a `python_tests` target for\nthis code or a `python_distribution` target to distribute the plugin externally.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": true,
          "type_hint": "Iterable[str]"
        }
      ],
      "summary": "A MyPy plugin loaded through source code."
    },
    "pex_binary": {
      "alias": "pex_binary",
      "description": "A Python target that can be converted into an executable PEX file.\n\nPEX files are self-contained executable files that contain a complete Python environment capable\nof running the target. For more information, see https://www.pantsbuild.org/docs/pex-files.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "output_path",
          "default": null,
          "description": "Where the built asset should be located. If undefined, this will use the path to the the BUILD, followed by the target name. For example, `src/python/project:app` would be `src.python.project/app.ext`. When running `./pants package`, this path will be prefixed by `--distdir` (e.g. `dist/`). Warning: setting this value risks naming collisions with other package targets you may have.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A single file containing the executable, such as ['app.py']. You can leave this off if you include the executable file in one of this target's `dependencies` and explicitly set this target's `entry_point`. This must have 0 or 1 files, but no more. If you depend on more files, put them in a `python_library` target and include that target in the `dependencies` field.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "entry_point",
          "default": null,
          "description": "The entry point for the binary. If omitted, Pants will use the module name from the `sources` field, e.g. `project/app.py` will become the entry point `project.app` .",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "platforms",
          "default": null,
          "description": "The platforms the built PEX should be compatible with. This defaults to the current platform, but can be overridden to different platforms. You can give a list of multiple platforms to create a multiplatform PEX. To use wheels for specific interpreter/platform tags, you can append them to the platform with hyphens like: PLATFORM-IMPL-PYVER-ABI (e.g. \"linux_x86_64-cp-27-cp27mu\", \"macosx_10.12_x86_64-cp-36-cp36m\"). PLATFORM is the host platform e.g. \"linux-x86_64\", \"macosx-10.12-x86_64\", etc\". IMPL is the Python implementation abbreviation (e.g. \"cp\", \"pp\", \"jp\"). PYVER is a two-digit string representing the python version (e.g. \"27\", \"36\"). ABI is the ABI tag (e.g. \"cp36m\", \"cp27mu\", \"abi3\", \"none\").",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "inherit_path",
          "default": null,
          "description": "Whether to inherit the `sys.path` of the environment that the binary runs in. Use `false` to not inherit `sys.path`; use `fallback` to inherit `sys.path` after packaged dependencies; and use `prefer` to inherit `sys.path` before packaged dependencies.",
          "required": false,
          "type_hint": "'fallback' | 'false' | 'prefer' | None"
        },
        {
          "alias": "zip_safe",
          "default": "True",
          "description": "Whether or not this binary is safe to run in compacted (zip-file) form. If the PEX is not zip safe, it will be written to disk prior to execution. You may need to mark `zip_safe=False` if you're having issues loading your code.",
          "required": false,
          "type_hint": "bool | None"
        },
        {
          "alias": "always_write_cache",
          "default": "False",
          "description": "Whether PEX should always write the .deps cache of the .pex file to disk or not. This can use less memory in RAM constrained environments.",
          "required": false,
          "type_hint": "bool | None"
        },
        {
          "alias": "ignore_errors",
          "default": "False",
          "description": "Should we ignore when PEX cannot resolve dependencies?",
          "required": false,
          "type_hint": "bool | None"
        },
        {
          "alias": "shebang",
          "default": null,
          "description": "Set the generated PEX to use this shebang, rather than the default of PEX choosing a shebang based on the interpreter constraints. This influences the behavior of running `./result.pex`. You can ignore the shebang by instead running `/path/to/python_interpreter ./result.pex`.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "emit_warnings",
          "default": null,
          "description": "Whether or not to emit PEX warnings at runtime. The default is determined by the option `emit_warnings` in the `[pex-binary-defaults]` scope.",
          "required": false,
          "type_hint": "bool | None"
        }
      ],
      "summary": "A Python target that can be converted into an executable PEX file."
    },
    "protobuf_library": {
      "alias": "protobuf_library",
      "description": "Protobuf files used to generate various languages.\n\nSee https://www.pantsbuild.org/docs/protobuf.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": "('*.proto',)",
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "grpc",
          "default": "False",
          "description": "Whether to generate gRPC code or not.",
          "required": false,
          "type_hint": "bool | None"
        },
        {
          "alias": "python_compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "python_source_root",
          "default": null,
          "description": "The source root to generate Python sources under. If unspecified, the source root the protobuf_library is under will be used.",
          "required": false,
          "type_hint": "str | None"
        }
      ],
      "summary": "Protobuf files used to generate various languages."
    },
    "pylint_source_plugin": {
      "alias": "pylint_source_plugin",
      "description": "A Pylint plugin loaded through source code.\n\nTo load a source plugin:\n\n    1. Write your plugin. See http://pylint.pycqa.org/en/latest/how_tos/plugins.html.\n    2. Define a `pylint_source_plugin` target with the plugin's Python file(s) included in the\n        `sources` field.\n    3. Add the parent directory of your target to the `root_patterns` option in the `[source]`\n        scope. For example, if your plugin is at `build-support/pylint/custom_plugin.py`, add\n        'build-support/pylint'. This is necessary for Pants to know how to tell Pylint to\n        discover your plugin. See https://www.pantsbuild.org/docs/source-roots.\n    4. Add `load-plugins=$module_name` to your Pylint config file. For example, if your Python\n        file is called `custom_plugin.py`, set `load-plugins=custom_plugin`. Set the `config`\n        option in the `[pylint]` scope to point to your Pylint config file.\n    5. Set the option `source_plugins` in the `[pylint]` scope to include this target's\n        address, e.g. `source_plugins = [\"build-support/pylint:plugin\"]`.\n\nTo instead load a third-party plugin, set the option `extra_requirements` in the `[pylint]`\nscope (see https://www.pantsbuild.org/docs/python-linters-and-formatters). Set `load-plugins` in\nyour config file, like you'd do with a source plugin.\n\nThis target type is treated similarly to a `python_library` target. For example, Python linters\nand formatters will run on this target.\n\nYou can include other targets in the `dependencies` field, so long as those targets are\nthird-party dependencies or are located in the same directory or a subdirectory.\n\nOther targets can depend on this target. This allows you to write a `python_tests` target for\nthis code or a `python_distribution` target to distribute the plugin externally.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this plugin depends on. Due to restrictions with Pylint plugins, these targets must either be third-party Python dependencies (https://www.pantsbuild.org/docs/python-third-party-dependencies) or be located within this target's same directory or a subdirectory.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": true,
          "type_hint": "Iterable[str]"
        }
      ],
      "summary": "A Pylint plugin loaded through source code."
    },
    "python_awslambda": {
      "alias": "python_awslambda",
      "description": "A self-contained Python function suitable for uploading to AWS Lambda.\n\nSee https://www.pantsbuild.org/docs/awslambda-python.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "output_path",
          "default": null,
          "description": "Where the built asset should be located. If undefined, this will use the path to the the BUILD, followed by the target name. For example, `src/python/project:app` would be `src.python.project/app.ext`. When running `./pants package`, this path will be prefixed by `--distdir` (e.g. `dist/`). Warning: setting this value risks naming collisions with other package targets you may have.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "handler",
          "default": null,
          "description": "AWS Lambda handler entrypoint (module.dotted.name:handler_func).",
          "required": true,
          "type_hint": "str"
        },
        {
          "alias": "runtime",
          "default": null,
          "description": "The identifier of the AWS Lambda runtime to target (pythonX.Y). See https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html.",
          "required": true,
          "type_hint": "str"
        }
      ],
      "summary": "A self-contained Python function suitable for uploading to AWS Lambda."
    },
    "python_distribution": {
      "alias": "python_distribution",
      "description": "A publishable Python setuptools distribution (e.g. an sdist or wheel).",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "provides",
          "default": null,
          "description": "The setup.py kwargs for the external artifact built from this target. See https://www.pantsbuild.org/docs/python-setup-py-goal.",
          "required": true,
          "type_hint": "PythonArtifact"
        },
        {
          "alias": "setup_py_commands",
          "default": null,
          "description": "The runtime commands to invoke setup.py with to create the distribution. E.g., [\"bdist_wheel\", \"--python-tag=py36.py37\", \"sdist\"] If empty or unspecified, will just create a chroot with a setup() function. See https://www.pantsbuild.org/docs/python-setup-py-goal.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        }
      ],
      "summary": "A publishable Python setuptools distribution (e.g. an sdist or wheel)."
    },
    "python_library": {
      "alias": "python_library",
      "description": "Python source code.\n\nA `python_library` does not necessarily correspond to a distribution you publish (see\n`python_distribution` and `pex_binary` for that); multiple `python_library` targets may be\npackaged into a distribution or binary.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": "('*.py', '*.pyi', '!test_*.py', '!*_test.py', '!tests.py', '!conftest.py', '!test_*.pyi', '!*_test.pyi', '!tests.pyi')",
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        }
      ],
      "summary": "Python source code."
    },
    "python_requirement_library": {
      "alias": "python_requirement_library",
      "description": "Python requirements installable by pip.\n\nThis target is useful when you want to declare Python requirements inline in a BUILD file. If\nyou have a `requirements.txt` file already, you can instead use the macro\n`python_requirements()` to convert each requirement into a `python_requirement_library()` target\nautomatically.\n\nSee https://www.pantsbuild.org/docs/python-third-party-dependencies.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "requirements",
          "default": null,
          "description": "A sequence of pip-style requirement strings, e.g. ['foo==1.8', 'bar<=3 ; python_version<'3'].",
          "required": true,
          "type_hint": "Iterable[str]"
        },
        {
          "alias": "module_mapping",
          "default": null,
          "description": "A mapping of requirement names to a list of the modules they provide. For example, `{\"ansicolors\": [\"colors\"]}`. Any unspecified requirements will use the requirement name as the default module, e.g. \"Django\" will default to [\"django\"]`. This is used for Pants to be able to infer dependencies in BUILD files.",
          "required": false,
          "type_hint": "Dict[str, Iterable[str]] | None"
        }
      ],
      "summary": "Python requirements installable by pip."
    },
    "python_tests": {
      "alias": "python_tests",
      "description": "Python tests.\n\nThese may be written in either Pytest-style or unittest style.\n\nAll test util code, other than `conftest.py`, should go into a dedicated `python_library()`\ntarget and then be included in the `dependencies` field.\n\nSee https://www.pantsbuild.org/docs/python-test-goal.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "compatibility",
          "default": null,
          "description": "A string for Python interpreter constraints on this target. This should be written in Requirement-style format, e.g. `CPython==2.7.*` or `CPython>=3.6,<4`. As a shortcut, you can leave off `CPython`, e.g. `>=2.7` will be expanded to `CPython>=2.7`. If this is left off, this will default to the option `interpreter_constraints` in the [python-setup] scope. See https://www.pantsbuild.org/docs/python-interpreter-compatibility.",
          "required": false,
          "type_hint": "str | Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": "('test_*.py', '*_test.py', 'tests.py', 'conftest.py', 'test_*.pyi', '*_test.pyi', 'tests.pyi')",
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "runtime_package_dependencies",
          "default": null,
          "description": "Addresses to targets that can be built with the `./pants package` goal and whose resulting assets should be included in the test run. Pants will build the assets as if you had run `./pants package`. It will include the results in your archive using the same name they would normally have, but without the `--distdir` prefix (e.g. `dist/`). You can include anything that can be built by `./pants package`, e.g. a `pex_binary`, `python_awslambda`, or an `archive`.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "timeout",
          "default": null,
          "description": "A timeout (in seconds) which covers the total runtime of all tests in this target. This only applies if the option `--pytest-timeouts` is set to True.",
          "required": false,
          "type_hint": "int | None"
        }
      ],
      "summary": "Python tests."
    },
    "relocated_files": {
      "alias": "relocated_files",
      "description": "Loose files with path manipulation applied.\n\nAllows you to relocate the files at runtime to something more convenient than\ntheir actual paths in your project.\n\nFor example, you can relocate `src/resources/project1/data.json` to instead be\n`resources/data.json`. Your other target types can then add this target to their\n`dependencies` field, rather than using the original `files` target.\n\nTo remove a prefix:\n\n    # Results in `data.json`.\n    relocated_files(\n        file_targets=[\"src/resources/project1:target\"],\n        src=\"src/resources/project1\",\n        dest=\"\",\n    )\n\nTo add a prefix:\n\n    # Results in `images/logo.svg`.\n    relocated_files(\n        file_targets=[\"//:logo\"],\n        src=\"\",\n        dest=\"images\",\n    )\n\nTo replace a prefix:\n\n    # Results in `new_prefix/project1/data.json`.\n    relocated_files(\n        file_targets=[\"src/resources/project1:target\"],\n        src=\"src/resources\",\n        dest=\"new_prefix\",\n    )",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "files_targets",
          "default": null,
          "description": "Addresses to the original `files()` targets that you want to relocate, such as `['//:json_files']`. Every target will be relocated using the same mapping. This means that every target must include the value from the `src` field in their original path.",
          "required": true,
          "type_hint": "Iterable[str]"
        },
        {
          "alias": "src",
          "default": null,
          "description": "The original prefix that you want to replace, such as `src/resources`. You can set this field to `\"\"` to preserve the original path; the value in the `dest` field will then be added to the beginning of this original path.",
          "required": true,
          "type_hint": "str"
        },
        {
          "alias": "dest",
          "default": null,
          "description": "The new prefix that you want to add to the beginning of the path, such as `data`. You can set this field to `\"\"` to avoid adding any new values to the path; the value in the `src` field will then be stripped, rather than replaced.",
          "required": true,
          "type_hint": "str"
        }
      ],
      "summary": "Loose files with path manipulation applied."
    },
    "resources": {
      "alias": "resources",
      "description": "Data emebdded in a code package and accessed in a location-independent manner.\n\nResources are embedded in code artifacts such as Python wheels or JVM JARs. The sources of a\n`resources` target are accessed via language-specific resource APIs, such as Python's pkgutil or\nJVM's ClassLoader, via paths relative to the target's source root.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "sources",
          "default": null,
          "description": "A list of files and globs that belong to this target. Paths are relative to the BUILD file's directory. You can ignore files/globs by prefixing them with `!`. Example: `sources=['example.py', 'test_*.py', '!test_ignore.py']`.",
          "required": true,
          "type_hint": "Iterable[str]"
        }
      ],
      "summary": "Data emebdded in a code package and accessed in a location-independent manner."
    },
    "target": {
      "alias": "target",
      "description": "A generic target with no specific type.\n\nThis can be used as a generic \"bag of dependencies\", i.e. you can group several different\ntargets into one single target so that your other targets only need to depend on one thing.",
      "fields": [
        {
          "alias": "tags",
          "default": null,
          "description": "Arbitrary strings that you can use to describe a target. For example, you may tag some test targets with 'integration_test' so that you could run `./pants --tags='integration_test' test ::` to only run on targets with that tag.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        },
        {
          "alias": "description",
          "default": null,
          "description": "A human-readable description of the target. Use `./pants list --documented ::` to see all targets with descriptions.",
          "required": false,
          "type_hint": "str | None"
        },
        {
          "alias": "dependencies",
          "default": null,
          "description": "Addresses to other targets that this target depends on, e.g. ['helloworld/subdir:lib']. Alternatively, you may include file names. Pants will find which target owns that file, and create a new target from that which only includes the file in its `sources` field. For files relative to the current BUILD file, prefix with `./`; otherwise, put the full path, e.g. ['./sibling.txt', 'resources/demo.json']. You may exclude dependencies by prefixing with `!`, e.g. `['!helloworld/subdir:lib', '!./sibling.txt']`. Ignores are intended for false positives with dependency inference; otherwise, simply leave off the dependency from the BUILD file.",
          "required": false,
          "type_hint": "Iterable[str] | None"
        }
      ],
      "summary": "A generic target with no specific type."
    }
  },
  "scope_to_help_info": {
    "": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--backend-packages=\"['<str>', '<str>', ...]\"",
          "config_key": "backend_packages",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--backend-packages=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_BACKEND_PACKAGES",
          "help": "Register functionality from these backends.\n\nThe backend packages must be present on the PYTHONPATH, typically because they are in the Pants core dist, in a plugin dist, or available as sources in the repo.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--backend-packages"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--backend-packages"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              },
              {
                "details": "from env var PANTS_BACKEND_PACKAGES",
                "rank": "ENVIRONMENT",
                "value": []
              },
              {
                "details": "from command-line flag",
                "rank": "FLAG",
                "value": [
                  "pants.backend.python",
                  "pants.backend.python.lint.black",
                  "pants.backend.python.lint.docformatter",
                  "pants.backend.python.lint.flake8",
                  "pants.backend.python.lint.isort",
                  "pants.backend.python.typecheck.mypy",
                  "pants.backend.python.lint.bandit",
                  "pants.backend.python.lint.pylint",
                  "pants.backend.codegen.protobuf.python",
                  "pants.backend.awslambda.python"
                ]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--plugins=\"['<str>', '<str>', ...]\"",
          "config_key": "plugins",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--plugins=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_PLUGINS",
          "help": "Allow backends to be loaded from these plugins (usually released through PyPI). The default backends for each plugin will be loaded automatically. Other backends in a plugin can be loaded by listing them in `backend_packages` in the `[GLOBAL]` scope.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--plugins"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--plugins"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]plugins-force-resolve",
          "config_key": "plugins_force_resolve",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]plugins-force-resolve"],
          "env_var": "PANTS_PLUGINS_FORCE_RESOLVE",
          "help": "Re-resolve plugins, even if previously resolved.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--plugins-force-resolve",
            "--no-plugins-force-resolve"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--plugins-force-resolve",
            "--no-plugins-force-resolve"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--plugin-cache-dir=<str>",
          "config_key": "plugin_cache_dir",
          "default": "/home/josh/.cache/pants/plugins",
          "deprecated_message": null,
          "display_args": ["--plugin-cache-dir=<str>"],
          "env_var": "PANTS_PLUGIN_CACHE_DIR",
          "help": "Cache resolved plugin requirements here.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--plugin-cache-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--plugin-cache-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.cache/pants/plugins"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]show-log-target",
          "config_key": "show_log_target",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]show-log-target"],
          "env_var": "PANTS_SHOW_LOG_TARGET",
          "help": "Display the target where a log message originates in that log message's output. This can be helpful when paired with --log-levels-by-target.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--show-log-target", "--no-show-log-target"],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--show-log-target",
            "--no-show-log-target"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--log-levels-by-target=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "log_levels_by_target",
          "default": {},
          "deprecated_message": null,
          "display_args": [
            "--log-levels-by-target=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_LOG_LEVELS_BY_TARGET",
          "help": "Set a more specific logging level for one or more logging targets. The names of logging targets are specified in log strings when the --show-log-target option is set. The logging levels are one of: \"error\", \"warn\", \"info\", \"debug\", \"trace\". All logging targets not specified here use the global log level set with --level. For example, you can set `--log-levels-by-target='{\"workunit_store\": \"info\", \"pants.engine.rules\": \"warn\"}'`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--log-levels-by-target"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--log-levels-by-target"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]log-show-rust-3rdparty",
          "config_key": "log_show_rust_3rdparty",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]log-show-rust-3rdparty"],
          "env_var": "PANTS_LOG_SHOW_RUST_3RDPARTY",
          "help": "Whether to show/hide logging done by 3rdparty Rust crates used by the Pants engine.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--log-show-rust-3rdparty",
            "--no-log-show-rust-3rdparty"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--log-show-rust-3rdparty",
            "--no-log-show-rust-3rdparty"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ignore-pants-warnings=\"['<str>', '<str>', ...]\"",
          "config_key": "ignore_pants_warnings",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--ignore-pants-warnings=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_IGNORE_PANTS_WARNINGS",
          "help": "Regexps matching warning strings to ignore, e.g. [\"DEPRECATED: the option `--my-opt` will be removed\"]. The regex patterns will be matched from the start of the warning string, and are case-insensitive.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--ignore-pants-warnings"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--ignore-pants-warnings"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-version=<str>",
          "config_key": "pants_version",
          "default": "2.0.2",
          "deprecated_message": null,
          "display_args": ["--pants-version=<str>"],
          "env_var": "PANTS_VERSION",
          "help": "Use this Pants version. Note that Pants only uses this to verify that you are using the requested version, as Pants cannot dynamically change the version it is using once the program is already running.\n\nIf you use the `./pants` script from https://www.pantsbuild.org/docs/installation, however, changing the value in your `pants.toml` will cause the new version to be installed and run automatically.\n\nRun `./pants --version` to check what is being used.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "2.0.2"
              },
              {
                "details": "from env var PANTS_VERSION",
                "rank": "ENVIRONMENT",
                "value": "2.0.2"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-bin-name=<str>",
          "config_key": "pants_bin_name",
          "default": "./pants",
          "deprecated_message": null,
          "display_args": ["--pants-bin-name=<str>"],
          "env_var": "PANTS_BIN_NAME",
          "help": "The name of the script or binary used to invoke Pants. Useful when printing help messages.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-bin-name"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-bin-name"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "./pants"
              },
              {
                "details": "from env var PANTS_BIN_NAME",
                "rank": "ENVIRONMENT",
                "value": "/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-bootstrapdir=<dir>",
          "config_key": "pants_bootstrapdir",
          "default": "/home/josh/.cache/pants",
          "deprecated_message": null,
          "display_args": ["--pants-bootstrapdir=<dir>"],
          "env_var": "PANTS_BOOTSTRAPDIR",
          "help": "Unused. Will be deprecated in 2.1.0.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-bootstrapdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-bootstrapdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.cache/pants"
              },
              {
                "details": "from pants.toml",
                "rank": "CONFIG_DEFAULT",
                "value": "/home/josh/.cache/pants"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-configdir=<dir>",
          "config_key": "pants_configdir",
          "default": "/home/josh/.config/pants",
          "deprecated_message": null,
          "display_args": ["--pants-configdir=<dir>"],
          "env_var": "PANTS_CONFIGDIR",
          "help": "Unused. Will be deprecated in 2.1.0.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-configdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-configdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.config/pants"
              },
              {
                "details": "from pants.toml",
                "rank": "CONFIG_DEFAULT",
                "value": "/home/josh/.config/pants"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-workdir=<dir>",
          "config_key": "pants_workdir",
          "default": "/tmp/tmp.MpwSc5OGVo/.pants.d",
          "deprecated_message": null,
          "display_args": ["--pants-workdir=<dir>"],
          "env_var": "PANTS_WORKDIR",
          "help": "Write intermediate logs and output files to this dir.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-workdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-workdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/tmp/tmp.MpwSc5OGVo/.pants.d"
              },
              {
                "details": "from pants.toml",
                "rank": "CONFIG_DEFAULT",
                "value": "/tmp/tmp.MpwSc5OGVo/.pants.d"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-physical-workdir-base=<dir>",
          "config_key": "pants_physical_workdir_base",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pants-physical-workdir-base=<dir>"],
          "env_var": "PANTS_PHYSICAL_WORKDIR_BASE",
          "help": "When set, a base directory in which to store `--pants-workdir` contents. If this option is a set, the workdir will be created as symlink into a per-workspace subdirectory.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-physical-workdir-base"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-physical-workdir-base"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-supportdir=<dir>",
          "config_key": "pants_supportdir",
          "default": "/tmp/tmp.MpwSc5OGVo/build-support",
          "deprecated_message": null,
          "display_args": ["--pants-supportdir=<dir>"],
          "env_var": "PANTS_SUPPORTDIR",
          "help": "Unused. Will be deprecated in 2.1.0.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-supportdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-supportdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/tmp/tmp.MpwSc5OGVo/build-support"
              },
              {
                "details": "from pants.toml",
                "rank": "CONFIG_DEFAULT",
                "value": "/tmp/tmp.MpwSc5OGVo/build-support"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-distdir=<dir>",
          "config_key": "pants_distdir",
          "default": "/tmp/tmp.MpwSc5OGVo/dist",
          "deprecated_message": null,
          "display_args": ["--pants-distdir=<dir>"],
          "env_var": "PANTS_DISTDIR",
          "help": "Write end products, such as the results of `./pants package`, to this dir.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-distdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-distdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/tmp/tmp.MpwSc5OGVo/dist"
              },
              {
                "details": "from pants.toml",
                "rank": "CONFIG_DEFAULT",
                "value": "/tmp/tmp.MpwSc5OGVo/dist"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pants-distdir-legacy-paths",
          "config_key": "pants_distdir_legacy_paths",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pants-distdir-legacy-paths"],
          "env_var": "PANTS_DISTDIR_LEGACY_PATHS",
          "help": "Whether to write binaries to the pre-2.0 paths under distdir. These legacy paths are not qualified by target address, so may be ambiguous.  This option is a temporary mechanism for easing transition to 2.0.  We recommemd switching to the new, unambiguous paths ASAP, by setting this option to true.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--pants-distdir-legacy-paths",
            "--no-pants-distdir-legacy-paths"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--pants-distdir-legacy-paths",
            "--no-pants-distdir-legacy-paths"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-subprocessdir=<str>",
          "config_key": "pants_subprocessdir",
          "default": "/tmp/tmp.MpwSc5OGVo/.pids",
          "deprecated_message": null,
          "display_args": ["--pants-subprocessdir=<str>"],
          "env_var": "PANTS_SUBPROCESSDIR",
          "help": "The directory to use for tracking subprocess metadata. This should live outside of the dir used by `pants_workdir` to allow for tracking subprocesses that outlive the workdir data.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-subprocessdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pants-subprocessdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/tmp/tmp.MpwSc5OGVo/.pids"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-config-files=\"['<str>', '<str>', ...]\"",
          "config_key": "pants_config_files",
          "default": ["/tmp/tmp.MpwSc5OGVo/pants.toml"],
          "deprecated_message": null,
          "display_args": ["--pants-config-files=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_CONFIG_FILES",
          "help": "Paths to Pants config files. This may only be set through the environment variable `PANTS_CONFIG_FILES` and the command line argument `--pants-config-files`; it will be ignored if in a config file like `pants.toml`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-config-files"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pants-config-files"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["/tmp/tmp.MpwSc5OGVo/pants.toml"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pantsrc",
          "config_key": "pantsrc",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pantsrc"],
          "env_var": "PANTS_PANTSRC",
          "help": "Use pantsrc files located at the paths specified in the global option `pantsrc_files`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsrc", "--no-pantsrc"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--pantsrc", "--no-pantsrc"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsrc-files=\"[<path>, <path>, ...]\"",
          "config_key": "pantsrc_files",
          "default": ["/etc/pantsrc", "~/.pants.rc"],
          "deprecated_message": null,
          "display_args": ["--pantsrc-files=\"[<path>, <path>, ...]\""],
          "env_var": "PANTS_PANTSRC_FILES",
          "help": "Override config with values from these files, using syntax matching that of `--pants-config-files`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsrc-files"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pantsrc-files"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["/etc/pantsrc", "~/.pants.rc"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pythonpath=\"['<str>', '<str>', ...]\"",
          "config_key": "pythonpath",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--pythonpath=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_PYTHONPATH",
          "help": "Add these directories to PYTHONPATH to search for plugins. This does not impact the PYTHONPATH used by Pants when running your Python code.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pythonpath"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pythonpath"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]verify-config",
          "config_key": "verify_config",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]verify-config"],
          "env_var": "PANTS_VERIFY_CONFIG",
          "help": "Verify that all config file values correspond to known options.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--verify-config", "--no-verify-config"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--verify-config", "--no-verify-config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pants-ignore=\"['<str>', '<str>', ...]\"",
          "config_key": "pants_ignore",
          "default": [".*/", "/dist/"],
          "deprecated_message": null,
          "display_args": ["--pants-ignore=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_IGNORE",
          "help": "Paths to ignore for all filesystem operations performed by pants (e.g. BUILD file scanning, glob matching, etc). Patterns use the gitignore syntax (https://git-scm.com/docs/gitignore). The `pants_distdir` and `pants_workdir` locations are automatically ignored. `pants_ignore` can be used in tandem with `pants_ignore_use_gitignore`; any rules specified here are applied after rules specified in a .gitignore file.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pants-ignore"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pants-ignore"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": [".*/", "/dist/"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pants-ignore-use-gitignore",
          "config_key": "pants_ignore_use_gitignore",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pants-ignore-use-gitignore"],
          "env_var": "PANTS_IGNORE_USE_GITIGNORE",
          "help": "Make use of a root .gitignore file when determining whether to ignore filesystem operations performed by Pants. If used together with `--pants-ignore`, any exclude/include patterns specified there apply after .gitignore rules.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--pants-ignore-use-gitignore",
            "--no-pants-ignore-use-gitignore"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--pants-ignore-use-gitignore",
            "--no-pants-ignore-use-gitignore"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "-d=<dir>, --logdir=<dir>",
          "config_key": "logdir",
          "default": null,
          "deprecated_message": null,
          "display_args": ["-d=<dir>", "--logdir=<dir>"],
          "env_var": "PANTS_LOGDIR",
          "help": "Write logs to files under this directory.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["-d", "--logdir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["-d", "--logdir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pantsd",
          "config_key": "pantsd",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pantsd"],
          "env_var": "PANTS_PANTSD",
          "help": "Enables use of the Pants daemon (pantsd). pantsd can significantly improve runtime performance by lowering per-run startup cost, and by memoizing filesystem operations and rule execution.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsd", "--no-pantsd"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--pantsd", "--no-pantsd"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]concurrent",
          "config_key": "concurrent",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]concurrent"],
          "env_var": "PANTS_CONCURRENT",
          "help": "Enable concurrent runs of Pants. Without this enabled, Pants will start up all concurrent invocations (e.g. in other terminals) without pantsd. Enabling this option requires parallel Pants invocations to block on the first",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--concurrent", "--no-concurrent"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--concurrent", "--no-concurrent"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-timeout-when-multiple-invocations=<float>",
          "config_key": "pantsd_timeout_when_multiple_invocations",
          "default": 60.0,
          "deprecated_message": null,
          "display_args": [
            "--pantsd-timeout-when-multiple-invocations=<float>"
          ],
          "env_var": "PANTS_PANTSD_TIMEOUT_WHEN_MULTIPLE_INVOCATIONS",
          "help": "The maximum amount of time to wait for the invocation to start until raising a timeout exception. Because pantsd currently does not support parallel runs, any prior running Pants command must be finished for the current one to start. To never timeout, use the value -1.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--pantsd-timeout-when-multiple-invocations"
          ],
          "typ": "float",
          "unscoped_cmd_line_args": [
            "--pantsd-timeout-when-multiple-invocations"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 60.0
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-max-memory-usage=<int>",
          "config_key": "pantsd_max_memory_usage",
          "default": 1073741824,
          "deprecated_message": null,
          "display_args": ["--pantsd-max-memory-usage=<int>"],
          "env_var": "PANTS_PANTSD_MAX_MEMORY_USAGE",
          "help": "The maximum memory usage of a pantsd process (in bytes). There is at most one pantsd process per workspace.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsd-max-memory-usage"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--pantsd-max-memory-usage"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 1073741824
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]print-stacktrace",
          "config_key": "print_stacktrace",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]print-stacktrace"],
          "env_var": "PANTS_PRINT_STACKTRACE",
          "help": "Print the full exception stack trace for any errors.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--print-stacktrace",
            "--no-print-stacktrace"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--print-stacktrace",
            "--no-print-stacktrace"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--native-engine-visualize-to=<dir_option>",
          "config_key": "native_engine_visualize_to",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--native-engine-visualize-to=<dir_option>"],
          "env_var": "PANTS_NATIVE_ENGINE_VISUALIZE_TO",
          "help": "A directory to write execution and rule graphs to as `dot` files. The contents of the directory will be overwritten if any filenames collide.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--native-engine-visualize-to"],
          "typ": "dir_option",
          "unscoped_cmd_line_args": ["--native-engine-visualize-to"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-pailgun-port=<int>",
          "config_key": "pantsd_pailgun_port",
          "default": 0,
          "deprecated_message": null,
          "display_args": ["--pantsd-pailgun-port=<int>"],
          "env_var": "PANTS_PANTSD_PAILGUN_PORT",
          "help": "The port to bind the Pants nailgun server to. Defaults to a random port.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsd-pailgun-port"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--pantsd-pailgun-port"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 0
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-pailgun-quit-timeout=<float>",
          "config_key": "pantsd_pailgun_quit_timeout",
          "default": 5.0,
          "deprecated_message": null,
          "display_args": ["--pantsd-pailgun-quit-timeout=<float>"],
          "env_var": "PANTS_PANTSD_PAILGUN_QUIT_TIMEOUT",
          "help": "The length of time (in seconds) to wait for further output after sending a signal to the remote pantsd process before killing it.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsd-pailgun-quit-timeout"],
          "typ": "float",
          "unscoped_cmd_line_args": ["--pantsd-pailgun-quit-timeout"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 5.0
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-invalidation-globs=\"['<str>', '<str>', ...]\"",
          "config_key": "pantsd_invalidation_globs",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--pantsd-invalidation-globs=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PANTSD_INVALIDATION_GLOBS",
          "help": "Filesystem events matching any of these globs will trigger a daemon restart. Pants's own code, plugins, and `--pants-config-files` are inherently invalidated.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pantsd-invalidation-globs"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pantsd-invalidation-globs"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--local-store-dir=<str>",
          "config_key": "local_store_dir",
          "default": "/home/josh/.cache/pants/lmdb_store",
          "deprecated_message": null,
          "display_args": ["--local-store-dir=<str>"],
          "env_var": "PANTS_LOCAL_STORE_DIR",
          "help": "Directory to use for the local file store, which stores the results of subprocesses run by Pants. The path may be absolute or relative. If the directory is within the build root, be sure to include it in `--pants-ignore`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--local-store-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--local-store-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.cache/pants/lmdb_store"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--named-caches-dir=<str>",
          "config_key": "named_caches_dir",
          "default": "/home/josh/.cache/pants/named_caches",
          "deprecated_message": null,
          "display_args": ["--named-caches-dir=<str>"],
          "env_var": "PANTS_NAMED_CACHES_DIR",
          "help": "Directory to use for named global caches for tools and processes with trusted, concurrency-safe caches. The path may be absolute or relative. If the directory is within the build root, be sure to include it in `--pants-ignore`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--named-caches-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--named-caches-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.cache/pants/named_caches"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--local-execution-root-dir=<str>",
          "config_key": "local_execution_root_dir",
          "default": "/tmp",
          "deprecated_message": null,
          "display_args": ["--local-execution-root-dir=<str>"],
          "env_var": "PANTS_LOCAL_EXECUTION_ROOT_DIR",
          "help": "Directory to use for local process execution sandboxing. The path may be absolute or relative. If the directory is within the build root, be sure to include it in `--pants-ignore`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--local-execution-root-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--local-execution-root-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/tmp"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]process-execution-use-local-cache",
          "config_key": "process_execution_use_local_cache",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]process-execution-use-local-cache"],
          "env_var": "PANTS_PROCESS_EXECUTION_USE_LOCAL_CACHE",
          "help": "Whether to keep process executions in a local cache persisted to disk.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--process-execution-use-local-cache",
            "--no-process-execution-use-local-cache"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--process-execution-use-local-cache",
            "--no-process-execution-use-local-cache"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]process-execution-cleanup-local-dirs",
          "config_key": "process_execution_cleanup_local_dirs",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]process-execution-cleanup-local-dirs"],
          "env_var": "PANTS_PROCESS_EXECUTION_CLEANUP_LOCAL_DIRS",
          "help": "Whether or not to cleanup directories used for local process execution (primarily useful for e.g. debugging).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--process-execution-cleanup-local-dirs",
            "--no-process-execution-cleanup-local-dirs"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--process-execution-cleanup-local-dirs",
            "--no-process-execution-cleanup-local-dirs"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ca-certs-path=<str>",
          "config_key": "ca_certs_path",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--ca-certs-path=<str>"],
          "env_var": "PANTS_CA_CERTS_PATH",
          "help": "Path to a file containing PEM-format CA certificates used for verifying secure connections when downloading files required by a build.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--ca-certs-path"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--ca-certs-path"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--process-execution-local-parallelism=<int>",
          "config_key": "process_execution_local_parallelism",
          "default": 64,
          "deprecated_message": null,
          "display_args": ["--process-execution-local-parallelism=<int>"],
          "env_var": "PANTS_PROCESS_EXECUTION_LOCAL_PARALLELISM",
          "help": "Number of concurrent processes that may be executed locally.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--process-execution-local-parallelism"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--process-execution-local-parallelism"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 64
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--process-execution-remote-parallelism=<int>",
          "config_key": "process_execution_remote_parallelism",
          "default": 128,
          "deprecated_message": null,
          "display_args": ["--process-execution-remote-parallelism=<int>"],
          "env_var": "PANTS_PROCESS_EXECUTION_REMOTE_PARALLELISM",
          "help": "Number of concurrent processes that may be executed remotely.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--process-execution-remote-parallelism"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--process-execution-remote-parallelism"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 128
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--process-execution-speculation-delay=<float>",
          "config_key": "process_execution_speculation_delay",
          "default": 1.0,
          "deprecated_message": null,
          "display_args": ["--process-execution-speculation-delay=<float>"],
          "env_var": "PANTS_PROCESS_EXECUTION_SPECULATION_DELAY",
          "help": "Number of seconds to wait before speculating a second request for a slow process.  see `--process-execution-speculation-strategy`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--process-execution-speculation-delay"],
          "typ": "float",
          "unscoped_cmd_line_args": ["--process-execution-speculation-delay"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 1.0
              }
            ]
          }
        },
        {
          "choices": ["remote_first", "local_first", "none"],
          "comma_separated_choices": "remote_first, local_first, none",
          "comma_separated_display_args": "--process-execution-speculation-strategy=<str>",
          "config_key": "process_execution_speculation_strategy",
          "default": "none",
          "deprecated_message": null,
          "display_args": ["--process-execution-speculation-strategy=<str>"],
          "env_var": "PANTS_PROCESS_EXECUTION_SPECULATION_STRATEGY",
          "help": "Speculate a second request for an underlying process if the first one does not complete within `--process-execution-speculation-delay` seconds.\n`local_first` (default): Try to run the process locally first, and fall back to remote execution if available.\n`remote_first`: Run the process on the remote execution backend if available, and fall back to the local host if remote calls take longer than the speculation timeout.\n`none`: Do not speculate about long running processes.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--process-execution-speculation-strategy"],
          "typ": "str",
          "unscoped_cmd_line_args": [
            "--process-execution-speculation-strategy"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "none"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]process-execution-local-enable-nailgun",
          "config_key": "process_execution_local_enable_nailgun",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]process-execution-local-enable-nailgun"],
          "env_var": "PANTS_PROCESS_EXECUTION_LOCAL_ENABLE_NAILGUN",
          "help": "Whether or not to use nailgun to run the requests that are marked as nailgunnable.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--process-execution-local-enable-nailgun",
            "--no-process-execution-local-enable-nailgun"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--process-execution-local-enable-nailgun",
            "--no-process-execution-local-enable-nailgun"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]remote-execution",
          "config_key": "remote_execution",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]remote-execution"],
          "env_var": "PANTS_REMOTE_EXECUTION",
          "help": "Enables remote workers for increased parallelism. (Alpha)",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--remote-execution",
            "--no-remote-execution"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--remote-execution",
            "--no-remote-execution"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-server=\"['<str>', '<str>', ...]\"",
          "config_key": "remote_store_server",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--remote-store-server=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_REMOTE_STORE_SERVER",
          "help": "host:port of grpc server to use as remote execution file store.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-store-server"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--remote-store-server"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-thread-count=<int>",
          "config_key": "remote_store_thread_count",
          "default": 1,
          "deprecated_message": null,
          "display_args": ["--remote-store-thread-count=<int>"],
          "env_var": "PANTS_REMOTE_STORE_THREAD_COUNT",
          "help": "Thread count to use for the pool that interacts with the remote file store.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-store-thread-count"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--remote-store-thread-count"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 1
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-execution-server=<str>",
          "config_key": "remote_execution_server",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--remote-execution-server=<str>"],
          "env_var": "PANTS_REMOTE_EXECUTION_SERVER",
          "help": "host:port of grpc server to use as remote execution scheduler.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-execution-server"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--remote-execution-server"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-chunk-bytes=<int>",
          "config_key": "remote_store_chunk_bytes",
          "default": 1048576,
          "deprecated_message": null,
          "display_args": ["--remote-store-chunk-bytes=<int>"],
          "env_var": "PANTS_REMOTE_STORE_CHUNK_BYTES",
          "help": "Size in bytes of chunks transferred to/from the remote file store.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-store-chunk-bytes"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--remote-store-chunk-bytes"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 1048576
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-chunk-upload-timeout-seconds=<int>",
          "config_key": "remote_store_chunk_upload_timeout_seconds",
          "default": 60,
          "deprecated_message": null,
          "display_args": ["--remote-store-chunk-upload-timeout-seconds=<int>"],
          "env_var": "PANTS_REMOTE_STORE_CHUNK_UPLOAD_TIMEOUT_SECONDS",
          "help": "Timeout (in seconds) for uploads of individual chunks to the remote file store.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--remote-store-chunk-upload-timeout-seconds"
          ],
          "typ": "int",
          "unscoped_cmd_line_args": [
            "--remote-store-chunk-upload-timeout-seconds"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 60
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-rpc-retries=<int>",
          "config_key": "remote_store_rpc_retries",
          "default": 2,
          "deprecated_message": null,
          "display_args": ["--remote-store-rpc-retries=<int>"],
          "env_var": "PANTS_REMOTE_STORE_RPC_RETRIES",
          "help": "Number of times to retry any RPC to the remote store before giving up.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-store-rpc-retries"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--remote-store-rpc-retries"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 2
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-store-connection-limit=<int>",
          "config_key": "remote_store_connection_limit",
          "default": 5,
          "deprecated_message": null,
          "display_args": ["--remote-store-connection-limit=<int>"],
          "env_var": "PANTS_REMOTE_STORE_CONNECTION_LIMIT",
          "help": "Number of remote stores to concurrently allow connections to.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-store-connection-limit"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--remote-store-connection-limit"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 5
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-execution-process-cache-namespace=<str>",
          "config_key": "remote_execution_process_cache_namespace",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--remote-execution-process-cache-namespace=<str>"],
          "env_var": "PANTS_REMOTE_EXECUTION_PROCESS_CACHE_NAMESPACE",
          "help": "The cache namespace for remote process execution. Bump this to invalidate every artifact's remote execution. This is the remote execution equivalent of the legacy cache-key-gen-version flag.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--remote-execution-process-cache-namespace"
          ],
          "typ": "str",
          "unscoped_cmd_line_args": [
            "--remote-execution-process-cache-namespace"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-instance-name=<str>",
          "config_key": "remote_instance_name",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--remote-instance-name=<str>"],
          "env_var": "PANTS_REMOTE_INSTANCE_NAME",
          "help": "Name of the remote execution instance to use. Used for routing within --remote-execution-server and --remote-store-server.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-instance-name"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--remote-instance-name"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-ca-certs-path=<str>",
          "config_key": "remote_ca_certs_path",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--remote-ca-certs-path=<str>"],
          "env_var": "PANTS_REMOTE_CA_CERTS_PATH",
          "help": "Path to a PEM file containing CA certificates used for verifying secure connections to --remote-execution-server and --remote-store-server. If not specified, TLS will not be used.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-ca-certs-path"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--remote-ca-certs-path"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-oauth-bearer-token-path=<str>",
          "config_key": "remote_oauth_bearer_token_path",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--remote-oauth-bearer-token-path=<str>"],
          "env_var": "PANTS_REMOTE_OAUTH_BEARER_TOKEN_PATH",
          "help": "Path to a file containing an oauth token to use for grpc connections to --remote-execution-server and --remote-store-server. If not specified, no authorization will be performed.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-oauth-bearer-token-path"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--remote-oauth-bearer-token-path"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-execution-extra-platform-properties=\"['<str>', '<str>', ...]\"",
          "config_key": "remote_execution_extra_platform_properties",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--remote-execution-extra-platform-properties=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_REMOTE_EXECUTION_EXTRA_PLATFORM_PROPERTIES",
          "help": "Platform properties to set on remote execution requests. Format: property=value. Multiple values should be specified as multiple occurrences of this flag. Pants itself may add additional platform properties.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--remote-execution-extra-platform-properties"
          ],
          "typ": "list",
          "unscoped_cmd_line_args": [
            "--remote-execution-extra-platform-properties"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-execution-headers=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "remote_execution_headers",
          "default": {},
          "deprecated_message": null,
          "display_args": [
            "--remote-execution-headers=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_REMOTE_EXECUTION_HEADERS",
          "help": "Headers to set on remote execution requests. Format: header=value. Pants itself may add additional headers.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-execution-headers"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--remote-execution-headers"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--remote-execution-overall-deadline-secs=<int>",
          "config_key": "remote_execution_overall_deadline_secs",
          "default": 3600,
          "deprecated_message": null,
          "display_args": ["--remote-execution-overall-deadline-secs=<int>"],
          "env_var": "PANTS_REMOTE_EXECUTION_OVERALL_DEADLINE_SECS",
          "help": "Overall timeout in seconds for each remote execution request from time of submission",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--remote-execution-overall-deadline-secs"],
          "typ": "int",
          "unscoped_cmd_line_args": [
            "--remote-execution-overall-deadline-secs"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 3600
              }
            ]
          }
        },
        {
          "choices": ["warn", "error"],
          "comma_separated_choices": "warn, error",
          "comma_separated_display_args": "--files-not-found-behavior=<FilesNotFoundBehavior>",
          "config_key": "files_not_found_behavior",
          "default": "warn",
          "deprecated_message": null,
          "display_args": [
            "--files-not-found-behavior=<FilesNotFoundBehavior>"
          ],
          "env_var": "PANTS_FILES_NOT_FOUND_BEHAVIOR",
          "help": "What to do when files and globs specified in BUILD files, such as in the `sources` field, cannot be found. This happens when the files do not exist on your machine or when they are ignored by the `--pants-ignore` option.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--files-not-found-behavior"],
          "typ": "FilesNotFoundBehavior",
          "unscoped_cmd_line_args": ["--files-not-found-behavior"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "warn"
              }
            ]
          }
        },
        {
          "choices": ["ignore", "warn", "error"],
          "comma_separated_choices": "ignore, warn, error",
          "comma_separated_display_args": "--owners-not-found-behavior=<OwnersNotFoundBehavior>",
          "config_key": "owners_not_found_behavior",
          "default": "error",
          "deprecated_message": null,
          "display_args": [
            "--owners-not-found-behavior=<OwnersNotFoundBehavior>"
          ],
          "env_var": "PANTS_OWNERS_NOT_FOUND_BEHAVIOR",
          "help": "What to do when file arguments do not have any owning target. This happens when there are no targets whose `sources` fields include the file argument.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--owners-not-found-behavior"],
          "typ": "OwnersNotFoundBehavior",
          "unscoped_cmd_line_args": ["--owners-not-found-behavior"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "error"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--build-patterns=\"['<str>', '<str>', ...]\"",
          "config_key": "build_patterns",
          "default": ["BUILD", "BUILD.*"],
          "deprecated_message": null,
          "display_args": ["--build-patterns=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_BUILD_PATTERNS",
          "help": "The naming scheme for BUILD files, i.e. where you define targets. This only sets the naming scheme, not the directory paths to look for. To add ignorepatterns, use the option `--build-ignore`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--build-patterns"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--build-patterns"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["BUILD", "BUILD.*"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--build-ignore=\"['<str>', '<str>', ...]\"",
          "config_key": "build_ignore",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--build-ignore=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_BUILD_IGNORE",
          "help": "Paths to ignore when identifying BUILD files. This does not affect any other filesystem operations; use `--pants-ignore` for that instead. Patterns use the gitignore pattern syntax (https://git-scm.com/docs/gitignore).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--build-ignore"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--build-ignore"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--build-file-prelude-globs=\"['<str>', '<str>', ...]\"",
          "config_key": "build_file_prelude_globs",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--build-file-prelude-globs=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_BUILD_FILE_PRELUDE_GLOBS",
          "help": "Python files to evaluate and whose symbols should be exposed to all BUILD files. See https://www.pantsbuild.org/docs/macros.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--build-file-prelude-globs"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--build-file-prelude-globs"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--subproject-roots=\"['<str>', '<str>', ...]\"",
          "config_key": "subproject_roots",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--subproject-roots=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_SUBPROJECT_ROOTS",
          "help": "Paths that correspond with build roots for any subproject that this project depends on.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--subproject-roots"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--subproject-roots"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--loop-max=<int>",
          "config_key": "loop_max",
          "default": 4294967296,
          "deprecated_message": null,
          "display_args": ["--loop-max=<int>"],
          "env_var": "PANTS_LOOP_MAX",
          "help": "The maximum number of times to loop when `--loop` is specified.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--loop-max"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--loop-max"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 4294967296
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--streaming-workunits-report-interval=<float>",
          "config_key": "streaming_workunits_report_interval",
          "default": 10.0,
          "deprecated_message": null,
          "display_args": ["--streaming-workunits-report-interval=<float>"],
          "env_var": "PANTS_STREAMING_WORKUNITS_REPORT_INTERVAL",
          "help": "Interval in seconds between when streaming workunit event receivers will be polled.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--streaming-workunits-report-interval"],
          "typ": "float",
          "unscoped_cmd_line_args": ["--streaming-workunits-report-interval"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 10.0
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--streaming-workunits-handlers=\"['<str>', '<str>', ...]\"",
          "config_key": "streaming_workunits_handlers",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--streaming-workunits-handlers=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_STREAMING_WORKUNITS_HANDLERS",
          "help": "Use this option to name Subsystems which will receive streaming workunit events. For instance, `--streaming-workunits-handlers=\"['pants.reporting.workunit.Workunits']\"` will register a Subsystem called Workunits defined in the module \"pants.reporting.workunit\".",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--streaming-workunits-handlers"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--streaming-workunits-handlers"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": ["trace", "debug", "info", "warn", "error"],
          "comma_separated_choices": "trace, debug, info, warn, error",
          "comma_separated_display_args": "-l=<LogLevel>, --level=<LogLevel>",
          "config_key": "level",
          "default": "info",
          "deprecated_message": null,
          "display_args": ["-l=<LogLevel>", "--level=<LogLevel>"],
          "env_var": "PANTS_LEVEL",
          "help": "Set the logging level.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["-l", "--level"],
          "typ": "LogLevel",
          "unscoped_cmd_line_args": ["-l", "--level"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "info"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]colors",
          "config_key": "colors",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]colors"],
          "env_var": "PANTS_COLORS",
          "help": "Whether Pants should use colors in output or not. This may also impact whether some tools Pants run use color.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--colors", "--no-colors"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--colors", "--no-colors"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--spec-files=\"['<str>', '<str>', ...]\"",
          "config_key": "spec_files",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--spec-files=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_SPEC_FILES",
          "help": "Read additional specs (target addresses, files, and/or globs), one per line,from these files.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--spec-files"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--spec-files"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]dynamic-ui",
          "config_key": "dynamic_ui",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]dynamic-ui"],
          "env_var": "PANTS_DYNAMIC_UI",
          "help": "Display a dynamically-updating console UI as Pants runs. This is true by default if Pants detects a TTY and there is no 'CI' environment variable indicating that Pants is running in a continuous integration environment.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dynamic-ui", "--no-dynamic-ui"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--dynamic-ui", "--no-dynamic-ui"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--tag=\"[[+-]tag1,tag2,..., [+-]tag1,tag2,..., ...]\"",
          "config_key": "tag",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--tag=\"[[+-]tag1,tag2,..., [+-]tag1,tag2,..., ...]\""
          ],
          "env_var": "PANTS_TAG",
          "help": "Include only targets with these tags (optional '+' prefix) or without these tags ('-' prefix). See https://www.pantsbuild.org/docs/advanced-target-selection.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--tag"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--tag"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--exclude-target-regexp=\"[<regexp>, <regexp>, ...]\"",
          "config_key": "exclude_target_regexp",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--exclude-target-regexp=\"[<regexp>, <regexp>, ...]\""
          ],
          "env_var": "PANTS_EXCLUDE_TARGET_REGEXP",
          "help": "Exclude targets that match these regexes. This does not impact file arguments.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--exclude-target-regexp"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--exclude-target-regexp"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]loop",
          "config_key": "loop",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]loop"],
          "env_var": "PANTS_LOOP",
          "help": "Run goals continuously as file changes are detected. Alpha feature.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--loop", "--no-loop"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--loop", "--no-loop"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--backend-packages2=\"['<str>', '<str>', ...]\"",
          "config_key": "backend_packages2",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--backend-packages2=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_BACKEND_PACKAGES2",
          "help": "Register rules from these backends. The backend packages must be present on the PYTHONPATH, typically because they are in the Pants core dist, in a plugin dist, or available as sources in the repo.",
          "removal_hint": "Use --backend-packages instead.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--backend-packages2"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--backend-packages2"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--plugins2=\"['<str>', '<str>', ...]\"",
          "config_key": "plugins2",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--plugins2=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_PLUGINS2",
          "help": "Allow backends to be loaded from these plugins.  The default backends for each plugin will be loaded automatically. Other backends in a plugin can be loaded by listing them in --backend-packages.",
          "removal_hint": "Use --plugins instead.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--plugins2"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--plugins2"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]v1",
          "config_key": "v1",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]v1"],
          "env_var": "PANTS_V1",
          "help": "Enables execution of v1 Tasks.",
          "removal_hint": "The v1 engine no longer exists. This option does nothing.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--v1", "--no-v1"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--v1", "--no-v1"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]v2",
          "config_key": "v2",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]v2"],
          "env_var": "PANTS_V2",
          "help": "Enables execution of v2 @goal_rules.",
          "removal_hint": "The v2 engine is the only one available. This option does nothing.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--v2", "--no-v2"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--v2", "--no-v2"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--option-name-check-distance=<int>",
          "config_key": "option_name_check_distance",
          "default": 2,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--option-name-check-distance=<int>"],
          "env_var": "PANTS_OPTION_NAME_CHECK_DISTANCE",
          "help": "The maximum Levenshtein distance to use when offering suggestions for invalid option names.",
          "removal_hint": "The option `--option-name-check-distance` no longer does anything, as Pants now uses a different method to compute suggestions.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--option-name-check-distance"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--option-name-check-distance"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 2
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--spec-file=\"['<str>', '<str>', ...]\"",
          "config_key": "spec_file",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--spec-file=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_SPEC_FILE",
          "help": "Read additional specs from this file (e.g. target addresses or file names). Each spec should be one per line.",
          "removal_hint": "Use --spec-files",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--spec-file"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--spec-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]print-exception-stacktrace",
          "config_key": "print_exception_stacktrace",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]print-exception-stacktrace"],
          "env_var": "PANTS_PRINT_EXCEPTION_STACKTRACE",
          "help": "Print to console the full exception stack trace if encountered.",
          "removal_hint": "Use `--print-stacktrace` instead of `--print-exception-stacktrace`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--print-exception-stacktrace",
            "--no-print-exception-stacktrace"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--print-exception-stacktrace",
            "--no-print-exception-stacktrace"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--binaries-baseurls=\"['<str>', '<str>', ...]\"",
          "config_key": "binaries_baseurls",
          "default": ["https://binaries.pantsbuild.org"],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--binaries-baseurls=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_BINARIES_BASEURLS",
          "help": "List of URLs from which binary tools are downloaded. URLs are searched in order until the requested path is found.",
          "removal_hint": "This option has no effect",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--binaries-baseurls"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--binaries-baseurls"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["https://binaries.pantsbuild.org"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--binaries-fetch-timeout-secs=<int>",
          "config_key": "binaries_fetch_timeout_secs",
          "default": 30,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--binaries-fetch-timeout-secs=<int>"],
          "env_var": "PANTS_BINARIES_FETCH_TIMEOUT_SECS",
          "help": "Timeout in seconds for URL reads when fetching binary tools from the repos specified by --baseurls.",
          "removal_hint": "This option has no effect",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--binaries-fetch-timeout-secs"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--binaries-fetch-timeout-secs"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 30
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--binaries-path-by-id=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "binaries_path_by_id",
          "default": {},
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--binaries-path-by-id=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_BINARIES_PATH_BY_ID",
          "help": "Maps output of uname for a machine to a binary search path: (sysname, id) -> (os, arch), e.g. {('darwin', '15'): ('mac', '10.11'), ('linux', 'arm32'): ('linux', 'arm32')}.",
          "removal_hint": "This option has no effect",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--binaries-path-by-id"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--binaries-path-by-id"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]allow-external-binary-tool-downloads",
          "config_key": "allow_external_binary_tool_downloads",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]allow-external-binary-tool-downloads"],
          "env_var": "PANTS_ALLOW_EXTERNAL_BINARY_TOOL_DOWNLOADS",
          "help": "If False, require BinaryTool subclasses to download their contents from urls generated from --binaries-baseurls, even if the tool has an external url generator. This can be necessary if using Pants in an environment which cannot contact the wider Internet.",
          "removal_hint": "This option has no effect",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--allow-external-binary-tool-downloads",
            "--no-allow-external-binary-tool-downloads"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--allow-external-binary-tool-downloads",
            "--no-allow-external-binary-tool-downloads"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pantsd-log-dir=<str>",
          "config_key": "pantsd_log_dir",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--pantsd-log-dir=<str>"],
          "env_var": "PANTS_PANTSD_LOG_DIR",
          "help": "The directory to log pantsd output to.",
          "removal_hint": "The global option `pantsd_log_dir` does not do anything.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--pantsd-log-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--pantsd-log-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]remote-execution-enable-streaming",
          "config_key": "remote_execution_enable_streaming",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]remote-execution-enable-streaming"],
          "env_var": "PANTS_REMOTE_EXECUTION_ENABLE_STREAMING",
          "help": "This option no longer does anything. (It used to enable the streaming remote execution client which is now the only remote execution client.)",
          "removal_hint": "This option is no longer applicable.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--remote-execution-enable-streaming",
            "--no-remote-execution-enable-streaming"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--remote-execution-enable-streaming",
            "--no-remote-execution-enable-streaming"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]dependency-inference",
          "config_key": "dependency_inference",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]dependency-inference"],
          "env_var": "PANTS_DEPENDENCY_INFERENCE",
          "help": "Enable dependency inference, meaning that Pants will read your source code to infer the `dependencies` field for you in BUILD files. You can check what Pants inferred by running `./pants dependencies` on your target. You may still need to explicitly provide some `dependencies` that cannot be inferred.",
          "removal_hint": "This option is now a noop: individual inference providers can be independently enabled or disabled on their relevant subsystems. For Python, see `./pants help python-infer`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--dependency-inference",
            "--no-dependency-inference"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--dependency-inference",
            "--no-dependency-inference"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]lock",
          "config_key": "lock",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]lock"],
          "env_var": "PANTS_LOCK",
          "help": "Use a global lock to exclude other versions of Pants from running during critical operations.",
          "removal_hint": "The global option `lock` does not do anything.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--lock", "--no-lock"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--lock", "--no-lock"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "description": "Options to control the overall behavior of Pants.",
      "is_goal": false,
      "scope": ""
    },
    "awslambda": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--awslambda-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--awslambda-output-file=<path>"],
          "env_var": "PANTS_AWSLAMBDA_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--awslambda-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--awslambda-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--awslambda-sep=<separator>"],
          "env_var": "PANTS_AWSLAMBDA_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--awslambda-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Deprecated in favor of the `package` goal.",
      "is_goal": true,
      "scope": "awslambda"
    },
    "bandit": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-version=<str>",
          "config_key": "version",
          "default": "bandit>=1.6.2,<1.7",
          "deprecated_message": null,
          "display_args": ["--bandit-version=<str>"],
          "env_var": "PANTS_BANDIT_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "bandit>=1.6.2,<1.7"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["setuptools<45", "stevedore<3"],
          "deprecated_message": null,
          "display_args": [
            "--bandit-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_BANDIT_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["setuptools<45", "stevedore<3"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-entry-point=<str>",
          "config_key": "entry_point",
          "default": "bandit",
          "deprecated_message": null,
          "display_args": ["--bandit-entry-point=<str>"],
          "env_var": "PANTS_BANDIT_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "bandit"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--bandit-config=<file_option>"],
          "env_var": "PANTS_BANDIT_CONFIG",
          "help": "Path to a Bandit YAML config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]bandit-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]bandit-skip"],
          "env_var": "PANTS_BANDIT_SKIP",
          "help": "Don't use Bandit when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-skip", "--no-bandit-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--bandit-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_BANDIT_ARGS",
          "help": "Arguments to pass directly to Bandit, e.g. `--bandit-args=\"--skip B101,B308 --confidence\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--bandit-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--bandit-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--bandit-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_BANDIT_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": "This option no longer does anything, as Pants auto-configures the interpreter constraints for bandit based on your code's interpreter constraints.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--bandit-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "A tool for finding security issues in Python code (https://bandit.readthedocs.io).",
      "is_goal": false,
      "scope": "bandit"
    },
    "basicauth": {
      "advanced": [],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--basicauth-providers=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "providers",
          "default": {},
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--basicauth-providers=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_BASICAUTH_PROVIDERS",
          "help": "Map from provider name to config dict. This dict contains the following items: {provider_name: <url of endpoint that accepts basic auth and sets a session cookie>}. For example, `{'prod': 'https://app.pantsbuild.org/auth'}`.",
          "removal_hint": "The option `--basicauth-provides` does not do anything and the `[basicauth]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--basicauth-providers"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--providers"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]basicauth-allow-insecure-urls",
          "config_key": "allow_insecure_urls",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]basicauth-allow-insecure-urls"],
          "env_var": "PANTS_BASICAUTH_ALLOW_INSECURE_URLS",
          "help": "Allow auth against non-HTTPS urls. Must only be set when testing!",
          "removal_hint": "The option `--basicauth-allow-insecure-urls` does not do anything and the `[basicauth]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--basicauth-allow-insecure-urls",
            "--no-basicauth-allow-insecure-urls"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--allow-insecure-urls",
            "--no-allow-insecure-urls"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "description": "Support for HTTP basicauth.",
      "is_goal": false,
      "scope": "basicauth"
    },
    "binary": {
      "advanced": [],
      "basic": [],
      "deprecated": [],
      "description": "Deprecated in favor of the `package` goal.",
      "is_goal": true,
      "scope": "binary"
    },
    "black": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-version=<str>",
          "config_key": "version",
          "default": "black==20.8b1",
          "deprecated_message": null,
          "display_args": ["--black-version=<str>"],
          "env_var": "PANTS_BLACK_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "black==20.8b1"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["setuptools"],
          "deprecated_message": null,
          "display_args": [
            "--black-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_BLACK_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["setuptools"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-entry-point=<str>",
          "config_key": "entry_point",
          "default": "black:patched_main",
          "deprecated_message": null,
          "display_args": ["--black-entry-point=<str>"],
          "env_var": "PANTS_BLACK_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "black:patched_main"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.6"],
          "deprecated_message": null,
          "display_args": [
            "--black-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_BLACK_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.6"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--black-config=<file_option>"],
          "env_var": "PANTS_BLACK_CONFIG",
          "help": "Path to Black's pyproject.toml config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]black-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]black-skip"],
          "env_var": "PANTS_BLACK_SKIP",
          "help": "Don't use Black when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 fmt` and `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-skip", "--no-black-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--black-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--black-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_BLACK_ARGS",
          "help": "Arguments to pass directly to Black, e.g. `--black-args=\"--target-version=py37 --quiet\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--black-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The Black Python code formatter (https://black.readthedocs.io/).",
      "is_goal": false,
      "scope": "black"
    },
    "changed": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--changed-since=<str>",
          "config_key": "since",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--changed-since=<str>"],
          "env_var": "PANTS_CHANGED_SINCE",
          "help": "Calculate changes since this Git spec (commit range/SHA/ref).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--changed-since"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--since"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--changed-diffspec=<str>",
          "config_key": "diffspec",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--changed-diffspec=<str>"],
          "env_var": "PANTS_CHANGED_DIFFSPEC",
          "help": "Calculate changes contained within a given Git spec (commit range/SHA/ref).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--changed-diffspec"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--diffspec"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": ["none", "direct", "transitive"],
          "comma_separated_choices": "none, direct, transitive",
          "comma_separated_display_args": "--changed-dependees=<DependeesOption>",
          "config_key": "dependees",
          "default": "none",
          "deprecated_message": null,
          "display_args": ["--changed-dependees=<DependeesOption>"],
          "env_var": "PANTS_CHANGED_DEPENDEES",
          "help": "Include direct or transitive dependees of changed targets.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--changed-dependees"],
          "typ": "DependeesOption",
          "unscoped_cmd_line_args": ["--dependees"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "none"
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--changed-changes-since=<str>, --changed-parent=<str>",
          "config_key": "changes_since",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--changed-changes-since=<str>",
            "--changed-parent=<str>"
          ],
          "env_var": "PANTS_CHANGED_CHANGES_SINCE",
          "help": "Calculate changes since this tree-ish/scm ref.",
          "removal_hint": "Use `--changed-since` instead of `--changed-parent` or `--changed-changes-since`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--changed-changes-since",
            "--changed-parent"
          ],
          "typ": "str",
          "unscoped_cmd_line_args": ["--changes-since", "--parent"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": ["none", "direct", "transitive"],
          "comma_separated_choices": "none, direct, transitive",
          "comma_separated_display_args": "--changed-include-dependees=<DependeesOption>",
          "config_key": "include_dependees",
          "default": "none",
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--changed-include-dependees=<DependeesOption>"],
          "env_var": "PANTS_CHANGED_INCLUDE_DEPENDEES",
          "help": "Include direct or transitive dependees of changed targets.",
          "removal_hint": "Use `--changed-dependees` instead of `--changed-include-dependees`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--changed-include-dependees"],
          "typ": "DependeesOption",
          "unscoped_cmd_line_args": ["--include-dependees"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "none"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]changed-fast",
          "config_key": "fast",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]changed-fast"],
          "env_var": "PANTS_CHANGED_FAST",
          "help": "Stop searching for owners once a source is mapped to at least one owning target.",
          "removal_hint": "The option `--changed-fast` no longer does anything.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--changed-fast", "--no-changed-fast"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--fast", "--no-fast"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "description": "Tell Pants to detect what files and targets have changed from Git.",
      "is_goal": false,
      "scope": "changed"
    },
    "cookies": {
      "advanced": [],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--cookies-path=<str>",
          "config_key": "path",
          "default": "/home/josh/.cache/pants/auth/cookies",
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--cookies-path=<str>"],
          "env_var": "PANTS_COOKIES_PATH",
          "help": "Path to file that stores persistent cookies. Defaults to <pants bootstrap dir>/auth/cookies.",
          "removal_hint": "The option `--cookies-path` does not do anything and the `[cookies]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--cookies-path"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--path"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "/home/josh/.cache/pants/auth/cookies"
              }
            ]
          }
        }
      ],
      "description": "Manages HTTP cookies.",
      "is_goal": false,
      "scope": "cookies"
    },
    "count-loc": {
      "advanced": [],
      "basic": [],
      "deprecated": [],
      "description": "Count lines of code.",
      "is_goal": true,
      "scope": "count-loc"
    },
    "coverage-py": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-version=<str>",
          "config_key": "version",
          "default": "coverage>=5.0.3,<5.1",
          "deprecated_message": null,
          "display_args": ["--coverage-py-version=<str>"],
          "env_var": "PANTS_COVERAGE_PY_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "coverage>=5.0.3,<5.1"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--coverage-py-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_COVERAGE_PY_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-entry-point=<str>",
          "config_key": "entry_point",
          "default": "coverage",
          "deprecated_message": null,
          "display_args": ["--coverage-py-entry-point=<str>"],
          "env_var": "PANTS_COVERAGE_PY_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "coverage"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.6"],
          "deprecated_message": null,
          "display_args": [
            "--coverage-py-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_COVERAGE_PY_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.6"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-output-dir=<str>",
          "config_key": "output_dir",
          "default": "dist/coverage/python",
          "deprecated_message": null,
          "display_args": ["--coverage-py-output-dir=<str>"],
          "env_var": "PANTS_COVERAGE_PY_OUTPUT_DIR",
          "help": "Path to write the Pytest Coverage report to. Must be relative to build root.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-output-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "dist/coverage/python"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--coverage-py-config=<file_option>"],
          "env_var": "PANTS_COVERAGE_PY_CONFIG",
          "help": "Path to `.coveragerc` or alternative coverage config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--coverage-py-filter=\"['<str>', '<str>', ...]\"",
          "config_key": "filter",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--coverage-py-filter=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_COVERAGE_PY_FILTER",
          "help": "A list of Python modules to use in the coverage report, e.g. `['helloworld_test', 'helloworld.util.dirutil']. The modules are recursive: any submodules will be included. If you leave this off, the coverage report will include every file in the transitive closure of the address/file arguments; for example, `test ::` will include every Python file in your project, whereas `test project/app_test.py` will include `app_test.py` and any of its transitive dependencies.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-filter"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--filter"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": ["console", "xml", "html", "raw", "json"],
          "comma_separated_choices": "console, xml, html, raw, json",
          "comma_separated_display_args": "--coverage-py-report=\"[<CoverageReportType>, <CoverageReportType>, ...]\"",
          "config_key": "report",
          "default": ["console"],
          "deprecated_message": null,
          "display_args": [
            "--coverage-py-report=\"[<CoverageReportType>, <CoverageReportType>, ...]\""
          ],
          "env_var": "PANTS_COVERAGE_PY_REPORT",
          "help": "Which coverage report type(s) to emit.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--coverage-py-report"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--report"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["console"]
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Configuration for Python test coverage measurement.",
      "is_goal": false,
      "scope": "coverage-py"
    },
    "dependees": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--dependees-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--dependees-output-file=<path>"],
          "env_var": "PANTS_DEPENDEES_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependees-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--dependees-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--dependees-sep=<separator>"],
          "env_var": "PANTS_DEPENDEES_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependees-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]dependees-transitive",
          "config_key": "transitive",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]dependees-transitive"],
          "env_var": "PANTS_DEPENDEES_TRANSITIVE",
          "help": "List all transitive dependees, instead of only direct dependees.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--dependees-transitive",
            "--no-dependees-transitive"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--transitive", "--no-transitive"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]dependees-closed",
          "config_key": "closed",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]dependees-closed"],
          "env_var": "PANTS_DEPENDEES_CLOSED",
          "help": "Include the input targets in the output, along with the dependees.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--dependees-closed",
            "--no-dependees-closed"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--closed", "--no-closed"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": ["text", "json"],
          "comma_separated_choices": "text, json",
          "comma_separated_display_args": "--dependees-output-format=<DependeesOutputFormat>",
          "config_key": "output_format",
          "default": "text",
          "deprecated_message": null,
          "display_args": ["--dependees-output-format=<DependeesOutputFormat>"],
          "env_var": "PANTS_DEPENDEES_OUTPUT_FORMAT",
          "help": "Use `text` for a flattened list of target addresses; use `json` for each key to be the address of one of the specified targets, with its value being a list of that target's dependees, e.g. `{':example': [':dep1', ':dep2']}`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependees-output-format"],
          "typ": "DependeesOutputFormat",
          "unscoped_cmd_line_args": ["--output-format"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "text"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "List all targets that depend on any of the input files/targets.",
      "is_goal": true,
      "scope": "dependees"
    },
    "dependencies": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--dependencies-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--dependencies-output-file=<path>"],
          "env_var": "PANTS_DEPENDENCIES_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependencies-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--dependencies-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--dependencies-sep=<separator>"],
          "env_var": "PANTS_DEPENDENCIES_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependencies-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]dependencies-transitive",
          "config_key": "transitive",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]dependencies-transitive"],
          "env_var": "PANTS_DEPENDENCIES_TRANSITIVE",
          "help": "List all transitive dependencies. If unspecified, list direct dependencies only.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--dependencies-transitive",
            "--no-dependencies-transitive"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--transitive", "--no-transitive"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": ["source", "3rdparty", "source-and-3rdparty"],
          "comma_separated_choices": "source, 3rdparty, source-and-3rdparty",
          "comma_separated_display_args": "--dependencies-type=<DependencyType>",
          "config_key": "type",
          "default": "source",
          "deprecated_message": null,
          "display_args": ["--dependencies-type=<DependencyType>"],
          "env_var": "PANTS_DEPENDENCIES_TYPE",
          "help": "Which types of dependencies to list, where `source` means source code dependencies and `3rdparty` means third-party requirement strings.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--dependencies-type"],
          "typ": "DependencyType",
          "unscoped_cmd_line_args": ["--type"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "source"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "List the dependencies of the input files/targets.",
      "is_goal": true,
      "scope": "dependencies"
    },
    "docformatter": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--docformatter-version=<str>",
          "config_key": "version",
          "default": "docformatter>=1.3.1,<1.4",
          "deprecated_message": null,
          "display_args": ["--docformatter-version=<str>"],
          "env_var": "PANTS_DOCFORMATTER_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--docformatter-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "docformatter>=1.3.1,<1.4"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--docformatter-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--docformatter-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_DOCFORMATTER_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--docformatter-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--docformatter-entry-point=<str>",
          "config_key": "entry_point",
          "default": "docformatter:main",
          "deprecated_message": null,
          "display_args": ["--docformatter-entry-point=<str>"],
          "env_var": "PANTS_DOCFORMATTER_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--docformatter-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "docformatter:main"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--docformatter-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython==2.7.*", "CPython>=3.4,<3.9"],
          "deprecated_message": null,
          "display_args": [
            "--docformatter-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_DOCFORMATTER_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--docformatter-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython==2.7.*", "CPython>=3.4,<3.9"]
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]docformatter-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]docformatter-skip"],
          "env_var": "PANTS_DOCFORMATTER_SKIP",
          "help": "Don't use docformatter when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 fmt` and `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--docformatter-skip",
            "--no-docformatter-skip"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--docformatter-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--docformatter-args=\"[<shell_str>, <shell_str>, ...]\""
          ],
          "env_var": "PANTS_DOCFORMATTER_ARGS",
          "help": "Arguments to pass directly to docformatter, e.g. `--docformatter-args=\"--wrap-summaries=100 --pre-summary-newline\"`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--docformatter-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The Python docformatter tool (https://github.com/myint/docformatter).",
      "is_goal": false,
      "scope": "docformatter"
    },
    "download-pex-bin": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--download-pex-bin-version=<str>",
          "config_key": "version",
          "default": "v2.1.24",
          "deprecated_message": null,
          "display_args": ["--download-pex-bin-version=<str>"],
          "env_var": "PANTS_DOWNLOAD_PEX_BIN_VERSION",
          "help": "Use this version of pex.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--download-pex-bin-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "v2.1.24"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--download-pex-bin-known-versions=\"['<str>', '<str>', ...]\"",
          "config_key": "known_versions",
          "default": [
            "v2.1.24|darwin|561da5a7c76a8a88567a306fa60dfcb5c6924bb71c18b892080d5c2b3eea7133|2936466",
            "v2.1.24|linux|561da5a7c76a8a88567a306fa60dfcb5c6924bb71c18b892080d5c2b3eea7133|2936466"
          ],
          "deprecated_message": null,
          "display_args": [
            "--download-pex-bin-known-versions=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_DOWNLOAD_PEX_BIN_KNOWN_VERSIONS",
          "help": "\nKnown versions to verify downloads against.\n\nEach element is a pipe-separated string of `version|platform|sha256|length`, where:\n\n  - `version` is the version string\n  - `platform` is one of [darwin,linux],\n  - `sha256` is the 64-character hex representation of the expected sha256\n    digest of the download file, as emitted by `shasum -a 256`\n  - `length` is the expected length of the download file in bytes\n\nE.g., `3.1.2|darwin|6d0f18cd84b918c7b3edd0203e75569e0c7caecb1367bbbe409b44e28514f5be|42813`.\n\nValues are space-stripped, so pipes can be indented for readability if necessary.\n",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--download-pex-bin-known-versions"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--known-versions"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": [
                  "v2.1.24|darwin|561da5a7c76a8a88567a306fa60dfcb5c6924bb71c18b892080d5c2b3eea7133|2936466",
                  "v2.1.24|linux|561da5a7c76a8a88567a306fa60dfcb5c6924bb71c18b892080d5c2b3eea7133|2936466"
                ]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--download-pex-bin-url-template=<str>",
          "config_key": "url_template",
          "default": "https://github.com/pantsbuild/pex/releases/download/{version}/pex",
          "deprecated_message": null,
          "display_args": ["--download-pex-bin-url-template=<str>"],
          "env_var": "PANTS_DOWNLOAD_PEX_BIN_URL_TEMPLATE",
          "help": "URL to download the tool, either as a single binary file or a compressed file (e.g. zip file). You can change this to point to your own hosted file, e.g. to work with proxies. Use `{version}` to have the value from --version substituted, and `{platform}` to have a value from --url-platform-mapping substituted in, depending on the current platform. For example, https://github.com/.../protoc-{version}-{platform}.zip.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--download-pex-bin-url-template"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--url-template"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "https://github.com/pantsbuild/pex/releases/download/{version}/pex"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--download-pex-bin-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "url_platform_mapping",
          "default": {},
          "deprecated_message": null,
          "display_args": [
            "--download-pex-bin-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_DOWNLOAD_PEX_BIN_URL_PLATFORM_MAPPING",
          "help": "A dictionary mapping platforms to strings to be used when generating the URL to download the tool. In --url-template, anytime the `{platform}` string is used, Pants will determine the current platform, and substitute `{platform}` with the respective value from your dictionary. For example, if you define `{\"darwin\": \"apple-darwin\", \"linux\": \"unknown-linux\"}, and run Pants on Linux, then `{platform}` will be substituted in the --url-template option with unknown-linux.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--download-pex-bin-url-platform-mapping"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--url-platform-mapping"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "The PEX (Python EXecutable) tool (https://github.com/pantsbuild/pex).",
      "is_goal": false,
      "scope": "download-pex-bin"
    },
    "filedeps": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filedeps-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--filedeps-output-file=<path>"],
          "env_var": "PANTS_FILEDEPS_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filedeps-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filedeps-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--filedeps-sep=<separator>"],
          "env_var": "PANTS_FILEDEPS_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filedeps-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]filedeps-absolute",
          "config_key": "absolute",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]filedeps-absolute"],
          "env_var": "PANTS_FILEDEPS_ABSOLUTE",
          "help": "If True, output with absolute path. If unspecified, output with path relative to the build root.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--filedeps-absolute",
            "--no-filedeps-absolute"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--absolute", "--no-absolute"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]filedeps-globs",
          "config_key": "globs",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]filedeps-globs"],
          "env_var": "PANTS_FILEDEPS_GLOBS",
          "help": "Instead of outputting filenames, output the original globs used in the BUILD file. This will not include exclude globs (i.e. globs that start with `!`).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filedeps-globs", "--no-filedeps-globs"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--globs", "--no-globs"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]filedeps-transitive",
          "config_key": "transitive",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]filedeps-transitive"],
          "env_var": "PANTS_FILEDEPS_TRANSITIVE",
          "help": "If True, list files from all dependencies, including transitive dependencies. If unspecified, only list files from the target.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--filedeps-transitive",
            "--no-filedeps-transitive"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--transitive", "--no-transitive"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "List all source and BUILD files a target depends on.",
      "is_goal": true,
      "scope": "filedeps"
    },
    "filter": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--filter-output-file=<path>"],
          "env_var": "PANTS_FILTER_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filter-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--filter-sep=<separator>"],
          "env_var": "PANTS_FILTER_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filter-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-target-type=\"[[+-]type1,type2,..., [+-]type1,type2,..., ...]\"",
          "config_key": "target_type",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--filter-target-type=\"[[+-]type1,type2,..., [+-]type1,type2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_TARGET_TYPE",
          "help": "Filter on these target types, e.g. `resources` or `python_library`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filter-target-type"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--target-type"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-address-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\"",
          "config_key": "address_regex",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--filter-address-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_ADDRESS_REGEX",
          "help": "Filter on target addresses matching these regexes.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filter-address-regex"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--address-regex"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-tag-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\"",
          "config_key": "tag_regex",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--filter-tag-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_TAG_REGEX",
          "help": "Filter on targets with tags matching these regexes.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--filter-tag-regex"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--tag-regex"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-type=\"[[+-]type1,type2,..., [+-]type1,type2,..., ...]\"",
          "config_key": "type",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--filter-type=\"[[+-]type1,type2,..., [+-]type1,type2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_TYPE",
          "help": "Filter on these target types, e.g. `resources` or `python_library`.",
          "removal_hint": "Use `--target-type` instead of `--type`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--filter-type"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--type"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\"",
          "config_key": "regex",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--filter-regex=\"[[+-]regex1,regex2,..., [+-]regex1,regex2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_REGEX",
          "help": "Filter on target addresses matching these regexes.",
          "removal_hint": "Use `--address-regex` instead of `--regex`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--filter-regex"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--regex"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-target=\"[[+-]spec1,spec2,..., [+-]spec1,spec2,..., ...]\"",
          "config_key": "target",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--filter-target=\"[[+-]spec1,spec2,..., [+-]spec1,spec2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_TARGET",
          "help": "Filter on these target addresses.",
          "removal_hint": "`--filter-target` was removed because it is similar to `--filter-address-regex`. If you still need this feature, please message us on Slack (https://www.pantsbuild.org/docs/community).",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--filter-target"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--target"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--filter-ancestor=\"[[+-]spec1,spec2,..., [+-]spec1,spec2,..., ...]\"",
          "config_key": "ancestor",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--filter-ancestor=\"[[+-]spec1,spec2,..., [+-]spec1,spec2,..., ...]\""
          ],
          "env_var": "PANTS_FILTER_ANCESTOR",
          "help": "Filter on targets that these targets depend on.",
          "removal_hint": "`--filter-ancestor` was removed because it is not trivial to implement. If you still need this feature, please message us on Slack (https://www.pantsbuild.org/docs/community).",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--filter-ancestor"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--ancestor"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "Filter the input targets based on various criteria.",
      "is_goal": true,
      "scope": "filter"
    },
    "flake8": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-version=<str>",
          "config_key": "version",
          "default": "flake8>=3.7.9,<3.9",
          "deprecated_message": null,
          "display_args": ["--flake8-version=<str>"],
          "env_var": "PANTS_FLAKE8_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "flake8>=3.7.9,<3.9"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["setuptools<45"],
          "deprecated_message": null,
          "display_args": [
            "--flake8-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_FLAKE8_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["setuptools<45"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-entry-point=<str>",
          "config_key": "entry_point",
          "default": "flake8",
          "deprecated_message": null,
          "display_args": ["--flake8-entry-point=<str>"],
          "env_var": "PANTS_FLAKE8_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "flake8"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--flake8-config=<file_option>"],
          "env_var": "PANTS_FLAKE8_CONFIG",
          "help": "Path to `.flake8` or alternative Flake8 config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]flake8-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]flake8-skip"],
          "env_var": "PANTS_FLAKE8_SKIP",
          "help": "Don't use Flake8 when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-skip", "--no-flake8-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--flake8-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_FLAKE8_ARGS",
          "help": "Arguments to pass directly to Flake8, e.g. `--flake8-args=\"--ignore E123,W456 --enable-extensions H111\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--flake8-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--flake8-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--flake8-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_FLAKE8_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": "This option no longer does anything, as Pants auto-configures the interpreter constraints for flake8 based on your code's interpreter constraints.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--flake8-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "The Flake8 Python linter (https://flake8.pycqa.org/).",
      "is_goal": false,
      "scope": "flake8"
    },
    "fmt": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]fmt-per-file-caching",
          "config_key": "per_file_caching",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]fmt-per-file-caching"],
          "env_var": "PANTS_FMT_PER_FILE_CACHING",
          "help": "Rather than formatting all files in a single batch, format each file as a separate process. Why do this? You'll get many more cache hits. Why not do this? Formatters both have substantial startup overhead and are cheap to add one additional file to the run. On a cold cache, it is much faster to use `--no-per-file-caching`. We only recommend using `--per-file-caching` if you are using a remote cache or if you have benchmarked that this option will be faster than `--no-per-file-caching` for your use case.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--fmt-per-file-caching",
            "--no-fmt-per-file-caching"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--per-file-caching",
            "--no-per-file-caching"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]fmt-per-target-caching",
          "config_key": "per_target_caching",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]fmt-per-target-caching"],
          "env_var": "PANTS_FMT_PER_TARGET_CACHING",
          "help": "See `--per-file-caching`.",
          "removal_hint": "Use the renamed `--per-file-caching` option instead. If this option is set, Pants will now run per every file, rather than per target.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--fmt-per-target-caching",
            "--no-fmt-per-target-caching"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--per-target-caching",
            "--no-per-target-caching"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "description": "Autoformat source code.",
      "is_goal": true,
      "scope": "fmt"
    },
    "grpc_python_plugin": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--grpc_python_plugin-version=<str>",
          "config_key": "version",
          "default": "1.32.0",
          "deprecated_message": null,
          "display_args": ["--grpc_python_plugin-version=<str>"],
          "env_var": "PANTS_GRPC_PYTHON_PLUGIN_VERSION",
          "help": "Use this version of grpcpythonplugin.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--grpc_python_plugin-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "1.32.0"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--grpc_python_plugin-known-versions=\"['<str>', '<str>', ...]\"",
          "config_key": "known_versions",
          "default": [
            "1.32.0|darwin|b2db586656463841aa2fd4aab34fb6bd3ef887b522d80e4f2f292146c357f533|6215304",
            "1.32.0|linux |1af99df9bf733c17a75cbe379f3f9d9ff1627d8a8035ea057c3c78575afe1687|4965728"
          ],
          "deprecated_message": null,
          "display_args": [
            "--grpc_python_plugin-known-versions=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_GRPC_PYTHON_PLUGIN_KNOWN_VERSIONS",
          "help": "\nKnown versions to verify downloads against.\n\nEach element is a pipe-separated string of `version|platform|sha256|length`, where:\n\n  - `version` is the version string\n  - `platform` is one of [darwin,linux],\n  - `sha256` is the 64-character hex representation of the expected sha256\n    digest of the download file, as emitted by `shasum -a 256`\n  - `length` is the expected length of the download file in bytes\n\nE.g., `3.1.2|darwin|6d0f18cd84b918c7b3edd0203e75569e0c7caecb1367bbbe409b44e28514f5be|42813`.\n\nValues are space-stripped, so pipes can be indented for readability if necessary.\n",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--grpc_python_plugin-known-versions"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--known-versions"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": [
                  "1.32.0|darwin|b2db586656463841aa2fd4aab34fb6bd3ef887b522d80e4f2f292146c357f533|6215304",
                  "1.32.0|linux |1af99df9bf733c17a75cbe379f3f9d9ff1627d8a8035ea057c3c78575afe1687|4965728"
                ]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--grpc_python_plugin-url-template=<str>",
          "config_key": "url_template",
          "default": "https://binaries.pantsbuild.org/bin/grpc_python_plugin/{version}/{platform}/x86_64/grpc_python_plugin",
          "deprecated_message": null,
          "display_args": ["--grpc_python_plugin-url-template=<str>"],
          "env_var": "PANTS_GRPC_PYTHON_PLUGIN_URL_TEMPLATE",
          "help": "URL to download the tool, either as a single binary file or a compressed file (e.g. zip file). You can change this to point to your own hosted file, e.g. to work with proxies. Use `{version}` to have the value from --version substituted, and `{platform}` to have a value from --url-platform-mapping substituted in, depending on the current platform. For example, https://github.com/.../protoc-{version}-{platform}.zip.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--grpc_python_plugin-url-template"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--url-template"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "https://binaries.pantsbuild.org/bin/grpc_python_plugin/{version}/{platform}/x86_64/grpc_python_plugin"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--grpc_python_plugin-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "url_platform_mapping",
          "default": {
            "darwin": "macos",
            "linux": "linux"
          },
          "deprecated_message": null,
          "display_args": [
            "--grpc_python_plugin-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_GRPC_PYTHON_PLUGIN_URL_PLATFORM_MAPPING",
          "help": "A dictionary mapping platforms to strings to be used when generating the URL to download the tool. In --url-template, anytime the `{platform}` string is used, Pants will determine the current platform, and substitute `{platform}` with the respective value from your dictionary. For example, if you define `{\"darwin\": \"apple-darwin\", \"linux\": \"unknown-linux\"}, and run Pants on Linux, then `{platform}` will be substituted in the --url-template option with unknown-linux.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--grpc_python_plugin-url-platform-mapping"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--url-platform-mapping"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {
                  "darwin": "macos",
                  "linux": "linux"
                }
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "The grpc protobuf plugin for python.",
      "is_goal": false,
      "scope": "grpc_python_plugin"
    },
    "ipython": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ipython-version=<str>",
          "config_key": "version",
          "default": "ipython==7.16.1",
          "deprecated_message": null,
          "display_args": ["--ipython-version=<str>"],
          "env_var": "PANTS_IPYTHON_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--ipython-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "ipython==7.16.1"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ipython-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--ipython-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_IPYTHON_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--ipython-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ipython-entry-point=<str>",
          "config_key": "entry_point",
          "default": "IPython:start_ipython",
          "deprecated_message": null,
          "display_args": ["--ipython-entry-point=<str>"],
          "env_var": "PANTS_IPYTHON_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--ipython-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "IPython:start_ipython"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]ipython-ignore-cwd",
          "config_key": "ignore_cwd",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]ipython-ignore-cwd"],
          "env_var": "PANTS_IPYTHON_IGNORE_CWD",
          "help": "Whether to tell IPython not to put the CWD on the import path. Normally you want this to be True, so that imports come from the hermetic environment Pants creates. However IPython<7.13.0 doesn't support this option, so if you're using an earlier version (e.g., because you have Python 2.7 code) then you will need to set this to False, and you may have issues with imports from your CWD shading the hermetic environment.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--ipython-ignore-cwd",
            "--no-ipython-ignore-cwd"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--ignore-cwd", "--no-ignore-cwd"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ipython-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--ipython-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_IPYTHON_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": "This option no longer does anything, as Pants auto-configures the interpreter constraints for ipython based on your code's interpreter constraints.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--ipython-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "The IPython enhanced REPL (https://ipython.org/).",
      "is_goal": false,
      "scope": "ipython"
    },
    "isort": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-version=<str>",
          "config_key": "version",
          "default": "isort[pyproject]>=5.5.1,<5.6",
          "deprecated_message": null,
          "display_args": ["--isort-version=<str>"],
          "env_var": "PANTS_ISORT_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "isort[pyproject]>=5.5.1,<5.6"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["setuptools"],
          "deprecated_message": null,
          "display_args": [
            "--isort-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_ISORT_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["setuptools"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-entry-point=<str>",
          "config_key": "entry_point",
          "default": "isort.main",
          "deprecated_message": null,
          "display_args": ["--isort-entry-point=<str>"],
          "env_var": "PANTS_ISORT_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "isort.main"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.6"],
          "deprecated_message": null,
          "display_args": [
            "--isort-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_ISORT_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.6"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-config=\"[<file_option>, <file_option>, ...]\"",
          "config_key": "config",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--isort-config=\"[<file_option>, <file_option>, ...]\""
          ],
          "env_var": "PANTS_ISORT_CONFIG",
          "help": "Path to `isort.cfg` or alternative isort config file(s).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-config"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]isort-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]isort-skip"],
          "env_var": "PANTS_ISORT_SKIP",
          "help": "Don't use isort when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 fmt` and `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-skip", "--no-isort-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--isort-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--isort-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_ISORT_ARGS",
          "help": "Arguments to pass directly to isort, e.g. `--isort-args=\"--case-sensitive --trailing-comma\"`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--isort-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The Python import sorter tool (https://timothycrosley.github.io/isort/).",
      "is_goal": false,
      "scope": "isort"
    },
    "lambdex": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--lambdex-version=<str>",
          "config_key": "version",
          "default": "lambdex==0.1.3",
          "deprecated_message": null,
          "display_args": ["--lambdex-version=<str>"],
          "env_var": "PANTS_LAMBDEX_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--lambdex-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "lambdex==0.1.3"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--lambdex-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["setuptools>=50.3.0,<50.4"],
          "deprecated_message": null,
          "display_args": [
            "--lambdex-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_LAMBDEX_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--lambdex-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["setuptools>=50.3.0,<50.4"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--lambdex-entry-point=<str>",
          "config_key": "entry_point",
          "default": "lambdex.bin.lambdex",
          "deprecated_message": null,
          "display_args": ["--lambdex-entry-point=<str>"],
          "env_var": "PANTS_LAMBDEX_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--lambdex-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "lambdex.bin.lambdex"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--lambdex-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.5"],
          "deprecated_message": null,
          "display_args": [
            "--lambdex-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_LAMBDEX_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--lambdex-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.5"]
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "A tool for turning .pex files into AWS Lambdas (https://github.com/wickman/lambdex).",
      "is_goal": false,
      "scope": "lambdex"
    },
    "lint": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]lint-per-file-caching",
          "config_key": "per_file_caching",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]lint-per-file-caching"],
          "env_var": "PANTS_LINT_PER_FILE_CACHING",
          "help": "Rather than linting all files in a single batch, lint each file as a separate process. Why do this? You'll get many more cache hits. Why not do this? Linters both have substantial startup overhead and are cheap to add one additional file to the run. On a cold cache, it is much faster to use `--no-per-file-caching`. We only recommend using `--per-file-caching` if you are using a remote cache or if you have benchmarked that this option will be faster than `--no-per-file-caching` for your use case.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--lint-per-file-caching",
            "--no-lint-per-file-caching"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--per-file-caching",
            "--no-per-file-caching"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--lint-reports-dir=<DIR>",
          "config_key": "reports_dir",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--lint-reports-dir=<DIR>"],
          "env_var": "PANTS_LINT_REPORTS_DIR",
          "help": "Specifying a directory causes linters that support writing report files to write into this directory.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--lint-reports-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--reports-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]lint-per-target-caching",
          "config_key": "per_target_caching",
          "default": false,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]lint-per-target-caching"],
          "env_var": "PANTS_LINT_PER_TARGET_CACHING",
          "help": "See `--per-file-caching`.",
          "removal_hint": "Use the renamed `--per-file-caching` option instead. If this option is set, Pants will now run per every file, rather than per target.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--lint-per-target-caching",
            "--no-lint-per-target-caching"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--per-target-caching",
            "--no-per-target-caching"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "description": "Run all linters and/or formatters in check mode.",
      "is_goal": true,
      "scope": "lint"
    },
    "list": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--list-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--list-output-file=<path>"],
          "env_var": "PANTS_LIST_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--list-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--list-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--list-sep=<separator>"],
          "env_var": "PANTS_LIST_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--list-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]list-provides",
          "config_key": "provides",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]list-provides"],
          "env_var": "PANTS_LIST_PROVIDES",
          "help": "List only targets that provide an artifact, displaying the columns specified by --provides-columns.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--list-provides", "--no-list-provides"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--provides", "--no-provides"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]list-documented",
          "config_key": "documented",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]list-documented"],
          "env_var": "PANTS_LIST_DOCUMENTED",
          "help": "Print only targets that are documented with a description.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--list-documented", "--no-list-documented"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--documented", "--no-documented"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--list-provides-columns=<str>",
          "config_key": "provides_columns",
          "default": "address,artifact_id",
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--list-provides-columns=<str>"],
          "env_var": "PANTS_LIST_PROVIDES_COLUMNS",
          "help": "Display these columns when --provides is specified. Available columns are: address, artifact_id, repo_name, repo_url, push_db_basedir",
          "removal_hint": "The option `--provides-columns` no longer does anything. It was specific to the JVM backend, so no longer makes sense with Pants 2.0 initially only supporting Python.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--list-provides-columns"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--provides-columns"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "address,artifact_id"
              }
            ]
          }
        }
      ],
      "description": "Lists all targets matching the file or target arguments.",
      "is_goal": true,
      "scope": "list"
    },
    "mypy": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-version=<str>",
          "config_key": "version",
          "default": "mypy==0.782",
          "deprecated_message": null,
          "display_args": ["--mypy-version=<str>"],
          "env_var": "PANTS_MYPY_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "mypy==0.782"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--mypy-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_MYPY_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-entry-point=<str>",
          "config_key": "entry_point",
          "default": "mypy",
          "deprecated_message": null,
          "display_args": ["--mypy-entry-point=<str>"],
          "env_var": "PANTS_MYPY_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "mypy"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.6"],
          "deprecated_message": null,
          "display_args": [
            "--mypy-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_MYPY_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.6"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--mypy-config=<file_option>"],
          "env_var": "PANTS_MYPY_CONFIG",
          "help": "Path to `mypy.ini` or alternative MyPy config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-source-plugins=\"[<target_option>, <target_option>, ...]\"",
          "config_key": "source_plugins",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--mypy-source-plugins=\"[<target_option>, <target_option>, ...]\""
          ],
          "env_var": "PANTS_MYPY_SOURCE_PLUGINS",
          "help": "An optional list of `mypy_source_plugin` target addresses. This allows you to load custom plugins defined in source code. Run `./pants help mypy_source_plugin` for instructions, including how to load third-party plugins.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-source-plugins"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--source-plugins"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]mypy-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]mypy-skip"],
          "env_var": "PANTS_MYPY_SKIP",
          "help": "Don't use MyPy when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-skip", "--no-mypy-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--mypy-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--mypy-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_MYPY_ARGS",
          "help": "Arguments to pass directly to mypy, e.g. `--mypy-args=\"--python-version 3.7 --disallow-any-expr\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--mypy-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The MyPy Python type checker (http://mypy-lang.org/).",
      "is_goal": false,
      "scope": "mypy"
    },
    "package": {
      "advanced": [],
      "basic": [],
      "deprecated": [],
      "description": "Create a distributable package.",
      "is_goal": true,
      "scope": "package"
    },
    "pex": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pex-executable-search-paths=\"[<binary-paths>, <binary-paths>, ...]\"",
          "config_key": "executable_search_paths",
          "default": ["<PATH>"],
          "deprecated_message": null,
          "display_args": [
            "--pex-executable-search-paths=\"[<binary-paths>, <binary-paths>, ...]\""
          ],
          "env_var": "PANTS_PEX_EXECUTABLE_SEARCH_PATHS",
          "help": "The PATH value that will be used by the PEX subprocess and any subprocesses it spawns. The special string \"<PATH>\" will expand to the contents of the PATH env var.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pex-executable-search-paths"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--executable-search-paths"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["<PATH>"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pex-bootstrap-interpreter-names=\"[<bootstrap-python-names>, <bootstrap-python-names>, ...]\"",
          "config_key": "bootstrap_interpreter_names",
          "default": ["python", "python3", "python2"],
          "deprecated_message": null,
          "display_args": [
            "--pex-bootstrap-interpreter-names=\"[<bootstrap-python-names>, <bootstrap-python-names>, ...]\""
          ],
          "env_var": "PANTS_PEX_BOOTSTRAP_INTERPRETER_NAMES",
          "help": "The names of Python binaries to search for to bootstrap PEX files with. This does not impact which Python interpreter is used to run your code, only what is used to run the PEX tool. See the `interpreter_search_paths` option in `[python-setup]` to influence where interpreters are searched for.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pex-bootstrap-interpreter-names"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--bootstrap-interpreter-names"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["python", "python3", "python2"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pex-verbosity=<int>",
          "config_key": "verbosity",
          "default": 0,
          "deprecated_message": null,
          "display_args": ["--pex-verbosity=<int>"],
          "env_var": "PANTS_PEX_VERBOSITY",
          "help": "Set the verbosity level of PEX logging, from 0 (no logging) up to 9 (max logging).",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pex-verbosity"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--verbosity"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 0
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "How Pants uses Pex to run Python subprocesses.",
      "is_goal": false,
      "scope": "pex"
    },
    "pex-binary-defaults": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pex-binary-defaults-emit-warnings",
          "config_key": "emit_warnings",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pex-binary-defaults-emit-warnings"],
          "env_var": "PANTS_PEX_BINARY_DEFAULTS_EMIT_WARNINGS",
          "help": "Whether built PEX binaries should emit PEX warnings at runtime by default. Can be overridden by specifying the `emit_warnings` parameter of individual `pex_binary` targets",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--pex-binary-defaults-emit-warnings",
            "--no-pex-binary-defaults-emit-warnings"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--emit-warnings", "--no-emit-warnings"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pex-binary-defaults-pex-emit-warnings",
          "config_key": "pex_emit_warnings",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]pex-binary-defaults-pex-emit-warnings"],
          "env_var": "PANTS_PEX_BINARY_DEFAULTS_PEX_EMIT_WARNINGS",
          "help": "Whether built PEX binaries should emit pex warnings at runtime by default. Can be overridden by specifying the `emit_warnings` parameter of individual `pex_binary` targets",
          "removal_hint": "Use `emit_warnings` rather than `pex_emit_warnings`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--pex-binary-defaults-pex-emit-warnings",
            "--no-pex-binary-defaults-pex-emit-warnings"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--pex-emit-warnings",
            "--no-pex-emit-warnings"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "description": "Default settings for creating PEX executables.",
      "is_goal": false,
      "scope": "pex-binary-defaults"
    },
    "protoc": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--protoc-version=<str>",
          "config_key": "version",
          "default": "3.11.4",
          "deprecated_message": null,
          "display_args": ["--protoc-version=<str>"],
          "env_var": "PANTS_PROTOC_VERSION",
          "help": "Use this version of protoc.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--protoc-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "3.11.4"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--protoc-known-versions=\"['<str>', '<str>', ...]\"",
          "config_key": "known_versions",
          "default": [
            "3.11.4|darwin|8c6af11e1058efe953830ecb38324c0e0fd2fb67df3891896d138c535932e7db|2482119",
            "3.11.4|linux |6d0f18cd84b918c7b3edd0203e75569e0c8caecb1367bbbe409b45e28514f5be|1591191"
          ],
          "deprecated_message": null,
          "display_args": [
            "--protoc-known-versions=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PROTOC_KNOWN_VERSIONS",
          "help": "\nKnown versions to verify downloads against.\n\nEach element is a pipe-separated string of `version|platform|sha256|length`, where:\n\n  - `version` is the version string\n  - `platform` is one of [darwin,linux],\n  - `sha256` is the 64-character hex representation of the expected sha256\n    digest of the download file, as emitted by `shasum -a 256`\n  - `length` is the expected length of the download file in bytes\n\nE.g., `3.1.2|darwin|6d0f18cd84b918c7b3edd0203e75569e0c7caecb1367bbbe409b44e28514f5be|42813`.\n\nValues are space-stripped, so pipes can be indented for readability if necessary.\n",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--protoc-known-versions"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--known-versions"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": [
                  "3.11.4|darwin|8c6af11e1058efe953830ecb38324c0e0fd2fb67df3891896d138c535932e7db|2482119",
                  "3.11.4|linux |6d0f18cd84b918c7b3edd0203e75569e0c8caecb1367bbbe409b45e28514f5be|1591191"
                ]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--protoc-url-template=<str>",
          "config_key": "url_template",
          "default": "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-{platform}-x86_64.zip",
          "deprecated_message": null,
          "display_args": ["--protoc-url-template=<str>"],
          "env_var": "PANTS_PROTOC_URL_TEMPLATE",
          "help": "URL to download the tool, either as a single binary file or a compressed file (e.g. zip file). You can change this to point to your own hosted file, e.g. to work with proxies. Use `{version}` to have the value from --version substituted, and `{platform}` to have a value from --url-platform-mapping substituted in, depending on the current platform. For example, https://github.com/.../protoc-{version}-{platform}.zip.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--protoc-url-template"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--url-template"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "https://github.com/protocolbuffers/protobuf/releases/download/v{version}/protoc-{version}-{platform}-x86_64.zip"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--protoc-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "url_platform_mapping",
          "default": {
            "darwin": "osx",
            "linux": "linux"
          },
          "deprecated_message": null,
          "display_args": [
            "--protoc-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_PROTOC_URL_PLATFORM_MAPPING",
          "help": "A dictionary mapping platforms to strings to be used when generating the URL to download the tool. In --url-template, anytime the `{platform}` string is used, Pants will determine the current platform, and substitute `{platform}` with the respective value from your dictionary. For example, if you define `{\"darwin\": \"apple-darwin\", \"linux\": \"unknown-linux\"}, and run Pants on Linux, then `{platform}` will be substituted in the --url-template option with unknown-linux.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--protoc-url-platform-mapping"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--url-platform-mapping"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {
                  "darwin": "osx",
                  "linux": "linux"
                }
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--protoc-runtime-targets=\"[<target_option>, <target_option>, ...]\"",
          "config_key": "runtime_targets",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--protoc-runtime-targets=\"[<target_option>, <target_option>, ...]\""
          ],
          "env_var": "PANTS_PROTOC_RUNTIME_TARGETS",
          "help": "A list of addresses to targets for Protobuf runtime libraries. For example, a `python_requirement_library` for the `protobuf` Python library. These targets will be automatically injected into the `dependencies` field of every `protobuf_library`.",
          "removal_hint": "Use the option `runtime_dependencies` in the new `[python-protobuf]` scope, which behaves identically.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--protoc-runtime-targets"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--runtime-targets"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "The protocol buffer compiler (https://developers.google.com/protocol-buffers).",
      "is_goal": false,
      "scope": "protoc"
    },
    "pylint": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-version=<str>",
          "config_key": "version",
          "default": "pylint>=2.4.4,<2.5",
          "deprecated_message": null,
          "display_args": ["--pylint-version=<str>"],
          "env_var": "PANTS_PYLINT_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "pylint>=2.4.4,<2.5"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--pylint-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYLINT_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-entry-point=<str>",
          "config_key": "entry_point",
          "default": "pylint",
          "deprecated_message": null,
          "display_args": ["--pylint-entry-point=<str>"],
          "env_var": "PANTS_PYLINT_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "pylint"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-config=<file_option>",
          "config_key": "config",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pylint-config=<file_option>"],
          "env_var": "PANTS_PYLINT_CONFIG",
          "help": "Path to `pylintrc` or alternative Pylint config file",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-config"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-source-plugins=\"[<target_option>, <target_option>, ...]\"",
          "config_key": "source_plugins",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--pylint-source-plugins=\"[<target_option>, <target_option>, ...]\""
          ],
          "env_var": "PANTS_PYLINT_SOURCE_PLUGINS",
          "help": "An optional list of `pylint_source_plugin` target addresses. This allows you to load custom plugins defined in source code. Run `./pants help pylint_source_plugin` for instructions, including how to load third-party plugins.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-source-plugins"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--source-plugins"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pylint-skip",
          "config_key": "skip",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]pylint-skip"],
          "env_var": "PANTS_PYLINT_SKIP",
          "help": "Don't use Pylint when running `/home/josh/work/scie-pants/dist/scie-pants-linux-x86_64 lint`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-skip", "--no-pylint-skip"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--skip", "--no-skip"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-args=\"[<shell_str>, <shell_str>, ...]\"",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--pylint-args=\"[<shell_str>, <shell_str>, ...]\""],
          "env_var": "PANTS_PYLINT_ARGS",
          "help": "Arguments to pass directly to Pylint, e.g. `--pylint-args=\"--ignore=foo.py,bar.py --disable=C0330,W0311\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pylint-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pylint-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": [],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--pylint-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYLINT_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": "This option no longer does anything, as Pants auto-configures the interpreter constraints for pylint based on your code's interpreter constraints.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--pylint-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "description": "The PyLint linter for Python code (https://www.pylint.org/).",
      "is_goal": false,
      "scope": "pylint"
    },
    "pytest": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-version=<str>",
          "config_key": "version",
          "default": "pytest>=6.0.1,<6.1",
          "deprecated_message": null,
          "display_args": ["--pytest-version=<str>"],
          "env_var": "PANTS_PYTEST_VERSION",
          "help": "Requirement string for Pytest.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "pytest>=6.0.1,<6.1"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-pytest-plugins=\"['<str>', '<str>', ...]\"",
          "config_key": "pytest_plugins",
          "default": ["pytest-cov>=2.10.1,<2.11", "zipp==2.1.0"],
          "deprecated_message": null,
          "display_args": [
            "--pytest-pytest-plugins=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYTEST_PYTEST_PLUGINS",
          "help": "Requirement strings for any plugins or additional requirements you'd like to use.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-pytest-plugins"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--pytest-plugins"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["pytest-cov>=2.10.1,<2.11", "zipp==2.1.0"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-timeout-default=<int>",
          "config_key": "timeout_default",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pytest-timeout-default=<int>"],
          "env_var": "PANTS_PYTEST_TIMEOUT_DEFAULT",
          "help": "The default timeout (in seconds) for a test target if the `timeout` field is not set on the target.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-timeout-default"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--timeout-default"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-timeout-maximum=<int>",
          "config_key": "timeout_maximum",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pytest-timeout-maximum=<int>"],
          "env_var": "PANTS_PYTEST_TIMEOUT_MAXIMUM",
          "help": "The maximum timeout (in seconds) that may be used on a `python_tests` target.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-timeout-maximum"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--timeout-maximum"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-junit-xml-dir=<DIR>",
          "config_key": "junit_xml_dir",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pytest-junit-xml-dir=<DIR>"],
          "env_var": "PANTS_PYTEST_JUNIT_XML_DIR",
          "help": "Specifying a directory causes Junit XML result files to be emitted under that dir for each test run.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-junit-xml-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--junit-xml-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-junit-family=<str>",
          "config_key": "junit_family",
          "default": "xunit2",
          "deprecated_message": null,
          "display_args": ["--pytest-junit-family=<str>"],
          "env_var": "PANTS_PYTEST_JUNIT_FAMILY",
          "help": "The format of the generated XML file. See https://docs.pytest.org/en/latest/reference.html#confval-junit_family.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-junit-family"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--junit-family"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "xunit2"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-execution-slot-var=<str>",
          "config_key": "execution_slot_var",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--pytest-execution-slot-var=<str>"],
          "env_var": "PANTS_PYTEST_EXECUTION_SLOT_VAR",
          "help": "If a non-empty string, the process execution slot id (an integer) will be exposed to tests under this environment variable name.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-execution-slot-var"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--execution-slot-var"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--pytest-args=\"[<shell_str>, <shell_str>, ...]\", ... -- [<shell_str> [<shell_str> [...]]]",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--pytest-args=\"[<shell_str>, <shell_str>, ...]\"",
            "... -- [<shell_str> [<shell_str> [...]]]"
          ],
          "env_var": "PANTS_PYTEST_ARGS",
          "help": "Arguments to pass directly to Pytest, e.g. `--pytest-args=\"-k test_foo --quiet\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]pytest-timeouts",
          "config_key": "timeouts",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]pytest-timeouts"],
          "env_var": "PANTS_PYTEST_TIMEOUTS",
          "help": "Enable test target timeouts. If timeouts are enabled then test targets with a timeout= parameter set on their target will time out after the given number of seconds if not completed. If no timeout is set, then either the default timeout is used or no timeout is configured.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--pytest-timeouts", "--no-pytest-timeouts"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--timeouts", "--no-timeouts"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The pytest Python test framework (https://docs.pytest.org/).",
      "is_goal": false,
      "scope": "pytest"
    },
    "python-binary": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-binary-emit-warnings",
          "config_key": "emit_warnings",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]python-binary-emit-warnings"],
          "env_var": "PANTS_PYTHON_BINARY_EMIT_WARNINGS",
          "help": "Whether built PEX binaries should emit PEX warnings at runtime by default. Can be overridden by specifying the `emit_warnings` parameter of individual `pex_binary` targets",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-binary-emit-warnings",
            "--no-python-binary-emit-warnings"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--emit-warnings", "--no-emit-warnings"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-binary-pex-emit-warnings",
          "config_key": "pex_emit_warnings",
          "default": true,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]python-binary-pex-emit-warnings"],
          "env_var": "PANTS_PYTHON_BINARY_PEX_EMIT_WARNINGS",
          "help": "Whether built PEX binaries should emit pex warnings at runtime by default. Can be overridden by specifying the `emit_warnings` parameter of individual `pex_binary` targets",
          "removal_hint": "Use `emit_warnings` rather than `pex_emit_warnings`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--python-binary-pex-emit-warnings",
            "--no-python-binary-pex-emit-warnings"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--pex-emit-warnings",
            "--no-pex-emit-warnings"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "description": "Default settings for creating PEX executables.",
      "is_goal": false,
      "scope": "python-binary"
    },
    "python-infer": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-infer-imports",
          "config_key": "imports",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]python-infer-imports"],
          "env_var": "PANTS_PYTHON_INFER_IMPORTS",
          "help": "Infer a target's imported dependencies by parsing import statements from sources.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-infer-imports",
            "--no-python-infer-imports"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--imports", "--no-imports"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-infer-string-imports",
          "config_key": "string_imports",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]python-infer-string-imports"],
          "env_var": "PANTS_PYTHON_INFER_STRING_IMPORTS",
          "help": "Infer a target's dependencies based on strings that look like dynamic dependencies, such as Django settings files expressing dependencies as strings. To ignore any false positives, put `!{bad_address}` in the `dependencies` field of your target.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-infer-string-imports",
            "--no-python-infer-string-imports"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--string-imports", "--no-string-imports"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-infer-inits",
          "config_key": "inits",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]python-infer-inits"],
          "env_var": "PANTS_PYTHON_INFER_INITS",
          "help": "Infer a target's dependencies on any __init__.py files existing for the packages it is located in (recursively upward in the directory structure). Even if this is disabled, Pants will still include any ancestor __init__.py files, only they will not be 'proper' dependencies, e.g. they will not show up in `./pants dependencies` and their own dependencies will not be used. If you have empty `__init__.py` files, it's safe to leave this option off; otherwise, you should enable this option.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-infer-inits",
            "--no-python-infer-inits"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--inits", "--no-inits"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-infer-conftests",
          "config_key": "conftests",
          "default": true,
          "deprecated_message": null,
          "display_args": ["--[no-]python-infer-conftests"],
          "env_var": "PANTS_PYTHON_INFER_CONFTESTS",
          "help": "Infer a test target's dependencies on any conftest.py files in the current directory and ancestor directories.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-infer-conftests",
            "--no-python-infer-conftests"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--conftests", "--no-conftests"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Options controlling which dependencies will be inferred for Python targets.",
      "is_goal": false,
      "scope": "python-infer"
    },
    "python-native-code": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-native-code-cpp-flags=\"['<str>', '<str>', ...]\"",
          "config_key": "cpp_flags",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--python-native-code-cpp-flags=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYTHON_NATIVE_CODE_CPP_FLAGS",
          "help": "Override the `CPPFLAGS` environment variable for any forked subprocesses.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-native-code-cpp-flags"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--cpp-flags"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-native-code-ld-flags=\"['<str>', '<str>', ...]\"",
          "config_key": "ld_flags",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--python-native-code-ld-flags=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYTHON_NATIVE_CODE_LD_FLAGS",
          "help": "Override the `LDFLAGS` environment variable for any forked subprocesses.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-native-code-ld-flags"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--ld-flags"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "Options for building native code using Python, e.g. when resolving distributions.",
      "is_goal": false,
      "scope": "python-native-code"
    },
    "python-protobuf": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-protobuf-mypy-plugin-version=<str>",
          "config_key": "mypy_plugin_version",
          "default": "mypy-protobuf==1.23",
          "deprecated_message": null,
          "display_args": ["--python-protobuf-mypy-plugin-version=<str>"],
          "env_var": "PANTS_PYTHON_PROTOBUF_MYPY_PLUGIN_VERSION",
          "help": "The pip-style requirement string for `mypy-protobuf`. You must still set `--mypy-plugin` for this option to be used.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-protobuf-mypy-plugin-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--mypy-plugin-version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "mypy-protobuf==1.23"
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-protobuf-runtime-dependencies=\"[<target_option>, <target_option>, ...]\"",
          "config_key": "runtime_dependencies",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--python-protobuf-runtime-dependencies=\"[<target_option>, <target_option>, ...]\""
          ],
          "env_var": "PANTS_PYTHON_PROTOBUF_RUNTIME_DEPENDENCIES",
          "help": "A list of addresses to `python_requirement_library` targets for the runtime dependencies needed for generated Python code to work. For example, `['3rdparty/python:protobuf', '3rdparty/python:grpcio']`. These dependencies will be automatically added to every `protobuf_library` target",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-protobuf-runtime-dependencies"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--runtime-dependencies"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-protobuf-mypy-plugin",
          "config_key": "mypy_plugin",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]python-protobuf-mypy-plugin"],
          "env_var": "PANTS_PYTHON_PROTOBUF_MYPY_PLUGIN",
          "help": "Use the `mypy-protobuf` plugin (https://github.com/dropbox/mypy-protobuf) to also generate .pyi type stubs.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--python-protobuf-mypy-plugin",
            "--no-python-protobuf-mypy-plugin"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--mypy-plugin", "--no-mypy-plugin"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Options related to the Protobuf Python backend.",
      "is_goal": false,
      "scope": "python-protobuf"
    },
    "python-repos": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-repos-repos=\"['<str>', '<str>', ...]\"",
          "config_key": "repos",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--python-repos-repos=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_PYTHON_REPOS_REPOS",
          "help": "URLs of code repositories to look for requirements. In Pip and Pex, this option corresponds to the `--find-links` option.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-repos-repos"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--repos"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-repos-indexes=\"['<str>', '<str>', ...]\"",
          "config_key": "indexes",
          "default": ["https://pypi.org/simple/"],
          "deprecated_message": null,
          "display_args": [
            "--python-repos-indexes=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_PYTHON_REPOS_INDEXES",
          "help": "URLs of code repository indexes to look for requirements. If set to an empty list, then Pex will use no indices (meaning it will not use PyPI). The values should be compliant with PEP 503.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-repos-indexes"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--indexes"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["https://pypi.org/simple/"]
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "External Python code repositories, such as PyPI.",
      "is_goal": false,
      "scope": "python-repos"
    },
    "python-setup": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-interpreter-constraints=\"[<requirement>, <requirement>, ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.6"],
          "deprecated_message": null,
          "display_args": [
            "--python-setup-interpreter-constraints=\"[<requirement>, <requirement>, ...]\""
          ],
          "env_var": "PANTS_PYTHON_SETUP_INTERPRETER_CONSTRAINTS",
          "help": "Constrain the selected Python interpreter. Specify with requirement syntax, e.g. 'CPython>=2.7,<3' (A CPython interpreter with version >=2.7 AND version <3)or 'PyPy' (A pypy interpreter of any version). Multiple constraint strings will be ORed together. These constraints are used as the default value for the `compatibility` field of Python targets.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.6"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-requirement-constraints=<file_option>",
          "config_key": "requirement_constraints",
          "default": null,
          "deprecated_message": null,
          "display_args": [
            "--python-setup-requirement-constraints=<file_option>"
          ],
          "env_var": "PANTS_PYTHON_SETUP_REQUIREMENT_CONSTRAINTS",
          "help": "When resolving third-party requirements, use this constraints file to determine which versions to use. See https://pip.pypa.io/en/stable/user_guide/#constraints-files for more information on the format of constraint files and how constraints are applied in Pex and pip.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-requirement-constraints"],
          "typ": "file_option",
          "unscoped_cmd_line_args": ["--requirement-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": ["never", "nondeployables", "always"],
          "comma_separated_choices": "never, nondeployables, always",
          "comma_separated_display_args": "--python-setup-resolve-all-constraints=<ResolveAllConstraintsOption>",
          "config_key": "resolve_all_constraints",
          "default": "nondeployables",
          "deprecated_message": null,
          "display_args": [
            "--python-setup-resolve-all-constraints=<ResolveAllConstraintsOption>"
          ],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVE_ALL_CONSTRAINTS",
          "help": "If set, and the requirements of the code being operated on are a subset of the constraints file, then the entire constraints file will be used instead of the subset. If unset, or any requirement of the code being operated on is not in the constraints file, each subset will be independently resolved as needed, which is more correct - work is only invalidated if a requirement it actually depends on changes - but also a lot slower, due to the extra resolving. \n\n* `never` will always use proper subsets, regardless of the goal being run.\n* `nondeployables` will use proper subsets for `./pants package`, but otherwise attempt to use a single resolve.\n* `always` will always attempt to use a single resolve.\n\nRequires [python-setup].requirement_constraints to be set.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-resolve-all-constraints"],
          "typ": "ResolveAllConstraintsOption",
          "unscoped_cmd_line_args": ["--resolve-all-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "nondeployables"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-interpreter-search-paths=\"[<binary-paths>, <binary-paths>, ...]\"",
          "config_key": "interpreter_search_paths",
          "default": ["<PYENV>", "<PATH>"],
          "deprecated_message": null,
          "display_args": [
            "--python-setup-interpreter-search-paths=\"[<binary-paths>, <binary-paths>, ...]\""
          ],
          "env_var": "PANTS_PYTHON_SETUP_INTERPRETER_SEARCH_PATHS",
          "help": "A list of paths to search for Python interpreters that match your project's interpreter constraints. You can specify absolute paths to interpreter binaries and/or to directories containing interpreter binaries. The order of entries does not matter. The following special strings are supported:\n\n* \"<PATH>\", the contents of the PATH env var\n* \"<PYENV>\", all Python versions under $(pyenv root)/versions\n* \"<PYENV_LOCAL>\", the Pyenv interpreter with the version in BUILD_ROOT/.python-version\n* \"<PEXRC>\", paths in the PEX_PYTHON_PATH variable in /etc/pexrc or ~/.pexrc",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-interpreter-search-paths"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-search-paths"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["<PYENV>", "<PATH>"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-resolver-manylinux=<str>",
          "config_key": "resolver_manylinux",
          "default": "manylinux2014",
          "deprecated_message": null,
          "display_args": ["--python-setup-resolver-manylinux=<str>"],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVER_MANYLINUX",
          "help": "Whether to allow resolution of manylinux wheels when resolving requirements for foreign linux platforms. The value should be a manylinux platform upper bound, e.g.: 'manylinux2010', or else the string 'no' to disallow.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-resolver-manylinux"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--resolver-manylinux"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "manylinux2014"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-resolver-jobs=<int>",
          "config_key": "resolver_jobs",
          "default": 32,
          "deprecated_message": null,
          "display_args": ["--python-setup-resolver-jobs=<int>"],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVER_JOBS",
          "help": "The maximum number of concurrent jobs to build wheels with. Because Pants can run multiple subprocesses in parallel, the maximum total parallelism will be `--process-execution-{local,remote}-parallelism x --python-setup-resolver-jobs`. Setting this option higher may result in better parallelism, but, if set too high, may result in starvation and Out of Memory errors.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-resolver-jobs"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--resolver-jobs"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 32
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-resolver-http-cache-ttl=<int>",
          "config_key": "resolver_http_cache_ttl",
          "default": 3600,
          "deprecated_message": null,
          "display_args": ["--python-setup-resolver-http-cache-ttl=<int>"],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVER_HTTP_CACHE_TTL",
          "help": "The maximum time (in seconds) for items in the HTTP cache. When the cache expires,the PEX resolver will make network requests to see if new versions of your requirements are available.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--python-setup-resolver-http-cache-ttl"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--resolver-http-cache-ttl"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 3600
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-platforms=\"[<platform>, <platform>, ...]\"",
          "config_key": "platforms",
          "default": ["current"],
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--python-setup-platforms=\"[<platform>, <platform>, ...]\""
          ],
          "env_var": "PANTS_PYTHON_SETUP_PLATFORMS",
          "help": "A list of platforms to be supported by this Python environment. Each platformis a string, as returned by pkg_resources.get_supported_platform().",
          "removal_hint": "The option `--python-setup-platforms` does not do anything anymore. Instead, explicitly set the `platforms` field on each `pex_binary` target.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--python-setup-platforms"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--platforms"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["current"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-interpreter-cache-dir=<dir>",
          "config_key": "interpreter_cache_dir",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--python-setup-interpreter-cache-dir=<dir>"],
          "env_var": "PANTS_PYTHON_SETUP_INTERPRETER_CACHE_DIR",
          "help": "The parent directory for the interpreter cache. If unspecified, a standard path under the workdir is used.",
          "removal_hint": "The option `--python-setup-interpreter-cache-dir` does not do anything anymore.Instead, use the global option `--named-caches-dir`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--python-setup-interpreter-cache-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--interpreter-cache-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--python-setup-resolver-cache-dir=<dir>",
          "config_key": "resolver_cache_dir",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--python-setup-resolver-cache-dir=<dir>"],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVER_CACHE_DIR",
          "help": "The parent directory for the requirement resolver cache. If unspecified, a standard path under the workdir is used.",
          "removal_hint": "The option `--python-setup-resolver-cache-dir` does not do anything anymore. Instead, use the global option `--named-caches-dir`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--python-setup-resolver-cache-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--resolver-cache-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]python-setup-resolver-allow-prereleases",
          "config_key": "resolver_allow_prereleases",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--[no-]python-setup-resolver-allow-prereleases"],
          "env_var": "PANTS_PYTHON_SETUP_RESOLVER_ALLOW_PRERELEASES",
          "help": "Whether to include pre-releases when resolving requirements.",
          "removal_hint": "The option `--python-setup-resolver-allow-prereleases` does not no anything. To use a pre-release, explicitly use that pre-release version in your requirement string, e.g. `my_dist==99.0.dev0`.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": [
            "--python-setup-resolver-allow-prereleases",
            "--no-python-setup-resolver-allow-prereleases"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--resolver-allow-prereleases",
            "--no-resolver-allow-prereleases"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "description": "A Python environment.",
      "is_goal": false,
      "scope": "python-setup"
    },
    "repl": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--repl-shell=<str>",
          "config_key": "shell",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--repl-shell=<str>"],
          "env_var": "PANTS_REPL_SHELL",
          "help": "Override the automatically-detected REPL program for the target(s) specified. ",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--repl-shell"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--shell"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Open a REPL with the specified code loadable.",
      "is_goal": true,
      "scope": "repl"
    },
    "reporting": {
      "advanced": [],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--reporting-reports-dir=<str>",
          "config_key": "reports_dir",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--reporting-reports-dir=<str>"],
          "env_var": "PANTS_REPORTING_REPORTS_DIR",
          "help": "DEPRECATED: This option is no longer applicable.",
          "removal_hint": "This option is no longer applicable. The `[reporting]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--reporting-reports-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--reports-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--reporting-template-dir=<str>",
          "config_key": "template_dir",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--reporting-template-dir=<str>"],
          "env_var": "PANTS_REPORTING_TEMPLATE_DIR",
          "help": "DEPRECATED: This option is no longer applicable.",
          "removal_hint": "This option is no longer applicable. The `[reporting]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--reporting-template-dir"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--template-dir"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--reporting-console-label-format=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "console_label_format",
          "default": {},
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--reporting-console-label-format=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_REPORTING_CONSOLE_LABEL_FORMAT",
          "help": "DEPRECATED: This option is no longer applicable.",
          "removal_hint": "This option is no longer applicable. The `[reporting]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--reporting-console-label-format"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--console-label-format"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--reporting-console-tool-output-format=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "console_tool_output_format",
          "default": {},
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--reporting-console-tool-output-format=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_REPORTING_CONSOLE_TOOL_OUTPUT_FORMAT",
          "help": "DEPRECATED: This option is no longer applicable.",
          "removal_hint": "This option is no longer applicable. The `[reporting]` subsystem will be removed.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--reporting-console-tool-output-format"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--console-tool-output-format"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        }
      ],
      "description": "V1 reporting config.",
      "is_goal": false,
      "scope": "reporting"
    },
    "roots": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--roots-output-file=<path>",
          "config_key": "output_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--roots-output-file=<path>"],
          "env_var": "PANTS_ROOTS_OUTPUT_FILE",
          "help": "Output the goal's stdout to this file. If unspecified, outputs to stdout.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--roots-output-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--output-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--roots-sep=<separator>",
          "config_key": "sep",
          "default": "\\n",
          "deprecated_message": null,
          "display_args": ["--roots-sep=<separator>"],
          "env_var": "PANTS_ROOTS_SEP",
          "help": "String to use to separate lines in line-oriented output.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--roots-sep"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--sep"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "\\n"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "List the repo's registered source roots.",
      "is_goal": true,
      "scope": "roots"
    },
    "run": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-args=\"[<shell_str>, <shell_str>, ...]\", ... -- [<shell_str> [<shell_str> [...]]]",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--run-args=\"[<shell_str>, <shell_str>, ...]\"",
            "... -- [<shell_str> [<shell_str> [...]]]"
          ],
          "env_var": "PANTS_RUN_ARGS",
          "help": "Arguments to pass directly to the executed target, e.g. `--run-args=\"val1 val2 --debug\"`",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--run-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Runs a binary target.",
      "is_goal": true,
      "scope": "run"
    },
    "run-tracker": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-stats-local-json-file=<str>",
          "config_key": "stats_local_json_file",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--run-tracker-stats-local-json-file=<str>"],
          "env_var": "PANTS_RUN_TRACKER_STATS_LOCAL_JSON_FILE",
          "help": "Write stats to this local json file on run completion.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--run-tracker-stats-local-json-file"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--stats-local-json-file"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-stats-option-scopes-to-record=\"['<str>', '<str>', ...]\"",
          "config_key": "stats_option_scopes_to_record",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--run-tracker-stats-option-scopes-to-record=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_RUN_TRACKER_STATS_OPTION_SCOPES_TO_RECORD",
          "help": "Option scopes to record in stats on run completion. Options may be selected by joining the scope and the option with a ^ character, i.e. to get option `pantsd` in the GLOBAL scope, you'd pass `GLOBAL^pantsd`. Add a '*' to the list to capture all known scopes.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--run-tracker-stats-option-scopes-to-record"
          ],
          "typ": "list",
          "unscoped_cmd_line_args": ["--stats-option-scopes-to-record"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-stats-upload-urls=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "stats_upload_urls",
          "default": {},
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": [
            "--run-tracker-stats-upload-urls=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_RUN_TRACKER_STATS_UPLOAD_URLS",
          "help": "Upload stats to these URLs on run completion.  Value is a map from URL to the name of the auth provider the user must auth against in order to upload stats to that URL, or None/empty string if no auth is required.  Currently the auth provider name is only used to provide a more helpful error message.",
          "removal_hint": "RunTracker no longer directly supports uploading run stats to urls.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--run-tracker-stats-upload-urls"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--stats-upload-urls"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {}
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-stats-upload-timeout=<int>",
          "config_key": "stats_upload_timeout",
          "default": 2,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--run-tracker-stats-upload-timeout=<int>"],
          "env_var": "PANTS_RUN_TRACKER_STATS_UPLOAD_TIMEOUT",
          "help": "Wait at most this many seconds for the stats upload to complete.",
          "removal_hint": "RunTracker no longer directly supports uploading run stats to urls.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--run-tracker-stats-upload-timeout"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--stats-upload-timeout"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 2
              }
            ]
          }
        },
        {
          "choices": ["1", "2"],
          "comma_separated_choices": "1, 2",
          "comma_separated_display_args": "--run-tracker-stats-version=<int>",
          "config_key": "stats_version",
          "default": 1,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--run-tracker-stats-version=<int>"],
          "env_var": "PANTS_RUN_TRACKER_STATS_VERSION",
          "help": "Format of stats JSON for uploads and local json file.",
          "removal_hint": "RunTracker no longer directly supports uploading run stats to urls.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--run-tracker-stats-version"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--stats-version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 1
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-num-foreground-workers=<int>",
          "config_key": "num_foreground_workers",
          "default": 64,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--run-tracker-num-foreground-workers=<int>"],
          "env_var": "PANTS_RUN_TRACKER_NUM_FOREGROUND_WORKERS",
          "help": "Number of threads for foreground work.",
          "removal_hint": "RunTracker no longer uses foreground workers.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--run-tracker-num-foreground-workers"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--num-foreground-workers"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 64
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--run-tracker-num-background-workers=<int>",
          "config_key": "num_background_workers",
          "default": 64,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--run-tracker-num-background-workers=<int>"],
          "env_var": "PANTS_RUN_TRACKER_NUM_BACKGROUND_WORKERS",
          "help": "Number of threads for background work.",
          "removal_hint": "RunTracker no longer uses background workers.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--run-tracker-num-background-workers"],
          "typ": "int",
          "unscoped_cmd_line_args": ["--num-background-workers"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": 64
              }
            ]
          }
        }
      ],
      "description": "Tracks and times the execution of a pants run.",
      "is_goal": false,
      "scope": "run-tracker"
    },
    "scc": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--scc-version=<str>",
          "config_key": "version",
          "default": "2.12.0",
          "deprecated_message": null,
          "display_args": ["--scc-version=<str>"],
          "env_var": "PANTS_SCC_VERSION",
          "help": "Use this version of succinctcodecounter.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--scc-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "2.12.0"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--scc-known-versions=\"['<str>', '<str>', ...]\"",
          "config_key": "known_versions",
          "default": [
            "2.12.0|darwin|70b7002cd1e4541cb37b7b9cbc0eeedd13ceacb49628e82ab46332bb2e65a5a6|1842530",
            "2.12.0|linux|8eca3e98fe8a78d417d3779a51724515ac4459760d3ec256295f80954a0da044|1753059"
          ],
          "deprecated_message": null,
          "display_args": ["--scc-known-versions=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_SCC_KNOWN_VERSIONS",
          "help": "\nKnown versions to verify downloads against.\n\nEach element is a pipe-separated string of `version|platform|sha256|length`, where:\n\n  - `version` is the version string\n  - `platform` is one of [darwin,linux],\n  - `sha256` is the 64-character hex representation of the expected sha256\n    digest of the download file, as emitted by `shasum -a 256`\n  - `length` is the expected length of the download file in bytes\n\nE.g., `3.1.2|darwin|6d0f18cd84b918c7b3edd0203e75569e0c7caecb1367bbbe409b44e28514f5be|42813`.\n\nValues are space-stripped, so pipes can be indented for readability if necessary.\n",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--scc-known-versions"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--known-versions"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": [
                  "2.12.0|darwin|70b7002cd1e4541cb37b7b9cbc0eeedd13ceacb49628e82ab46332bb2e65a5a6|1842530",
                  "2.12.0|linux|8eca3e98fe8a78d417d3779a51724515ac4459760d3ec256295f80954a0da044|1753059"
                ]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--scc-url-template=<str>",
          "config_key": "url_template",
          "default": "https://github.com/boyter/scc/releases/download/v{version}/scc-{version}-x86_64-{platform}.zip",
          "deprecated_message": null,
          "display_args": ["--scc-url-template=<str>"],
          "env_var": "PANTS_SCC_URL_TEMPLATE",
          "help": "URL to download the tool, either as a single binary file or a compressed file (e.g. zip file). You can change this to point to your own hosted file, e.g. to work with proxies. Use `{version}` to have the value from --version substituted, and `{platform}` to have a value from --url-platform-mapping substituted in, depending on the current platform. For example, https://github.com/.../protoc-{version}-{platform}.zip.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--scc-url-template"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--url-template"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "https://github.com/boyter/scc/releases/download/v{version}/scc-{version}-x86_64-{platform}.zip"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--scc-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "url_platform_mapping",
          "default": {
            "darwin": "apple-darwin",
            "linux": "unknown-linux"
          },
          "deprecated_message": null,
          "display_args": [
            "--scc-url-platform-mapping=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_SCC_URL_PLATFORM_MAPPING",
          "help": "A dictionary mapping platforms to strings to be used when generating the URL to download the tool. In --url-template, anytime the `{platform}` string is used, Pants will determine the current platform, and substitute `{platform}` with the respective value from your dictionary. For example, if you define `{\"darwin\": \"apple-darwin\", \"linux\": \"unknown-linux\"}, and run Pants on Linux, then `{platform}` will be substituted in the --url-template option with unknown-linux.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--scc-url-platform-mapping"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--url-platform-mapping"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": {
                  "darwin": "apple-darwin",
                  "linux": "unknown-linux"
                }
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--scc-args=\"[<shell_str>, <shell_str>, ...]\", ... -- [<shell_str> [<shell_str> [...]]]",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--scc-args=\"[<shell_str>, <shell_str>, ...]\"",
            "... -- [<shell_str> [<shell_str> [...]]]"
          ],
          "env_var": "PANTS_SCC_ARGS",
          "help": "Arguments to pass directly to SCC, e.g. `--count-loc-args=\"--no-cocomo\"`. Refer to https://github.com/boyter/scc.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--scc-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "The Succinct Code Counter, aka `scc` (https://github.com/boyter/scc).",
      "is_goal": false,
      "scope": "scc"
    },
    "setup-py": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--setup-py-args=\"[<shell_str>, <shell_str>, ...]\", ... -- [<shell_str> [<shell_str> [...]]]",
          "config_key": "args",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--setup-py-args=\"[<shell_str>, <shell_str>, ...]\"",
            "... -- [<shell_str> [<shell_str> [...]]]"
          ],
          "env_var": "PANTS_SETUP_PY_ARGS",
          "help": "Arguments to pass directly to setup.py, e.g. `--setup-py-args='bdist_wheel --python-tag py36.py37'`. If unspecified, Pants will dump the setup.py chroot.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--setup-py-args"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--args"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]setup-py-transitive",
          "config_key": "transitive",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]setup-py-transitive"],
          "env_var": "PANTS_SETUP_PY_TRANSITIVE",
          "help": "If specified, will run the setup.py command recursively on all exported targets that the specified targets depend on, in dependency order.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--setup-py-transitive",
            "--no-setup-py-transitive"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--transitive", "--no-transitive"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Deprecated in favor of the `package` goal.",
      "is_goal": true,
      "scope": "setup-py"
    },
    "setup-py-generation": {
      "advanced": [],
      "basic": [
        {
          "choices": ["exact", "compatible", "any"],
          "comma_separated_choices": "exact, compatible, any",
          "comma_separated_display_args": "--setup-py-generation-first-party-dependency-version-scheme=<FirstPartyDependencyVersionScheme>",
          "config_key": "first_party_dependency_version_scheme",
          "default": "exact",
          "deprecated_message": null,
          "display_args": [
            "--setup-py-generation-first-party-dependency-version-scheme=<FirstPartyDependencyVersionScheme>"
          ],
          "env_var": "PANTS_SETUP_PY_GENERATION_FIRST_PARTY_DEPENDENCY_VERSION_SCHEME",
          "help": "What version to set in `install_requires` when a `python_distribution` depends on other `python_distribution`s. If `exact`, will use `==`. If `compatible`, will use `~=`. If `any`, will leave off the version. See https://www.python.org/dev/peps/pep-0440/#version-specifiers.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--setup-py-generation-first-party-dependency-version-scheme"
          ],
          "typ": "FirstPartyDependencyVersionScheme",
          "unscoped_cmd_line_args": ["--first-party-dependency-version-scheme"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "exact"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Options to control how setup.py is generated from a `python_distribution` target.",
      "is_goal": false,
      "scope": "setup-py-generation"
    },
    "setuptools": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--setuptools-version=<str>",
          "config_key": "version",
          "default": "setuptools>=50.3.0,<50.4",
          "deprecated_message": null,
          "display_args": ["--setuptools-version=<str>"],
          "env_var": "PANTS_SETUPTOOLS_VERSION",
          "help": "Requirement string for the tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--setuptools-version"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--version"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "setuptools>=50.3.0,<50.4"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--setuptools-extra-requirements=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_requirements",
          "default": ["wheel==0.35.1"],
          "deprecated_message": null,
          "display_args": [
            "--setuptools-extra-requirements=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_SETUPTOOLS_EXTRA_REQUIREMENTS",
          "help": "Any additional requirement strings to use with the tool. This is useful if the tool allows you to install plugins or if you need to constrain a dependency to a certain version.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--setuptools-extra-requirements"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-requirements"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["wheel==0.35.1"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--setuptools-entry-point=<str>",
          "config_key": "entry_point",
          "default": null,
          "deprecated_message": null,
          "display_args": ["--setuptools-entry-point=<str>"],
          "env_var": "PANTS_SETUPTOOLS_ENTRY_POINT",
          "help": "The main module for the tool. Usually, you will not want to change this from the default.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--setuptools-entry-point"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--entry-point"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--setuptools-interpreter-constraints=\"['<str>', '<str>', ...]\"",
          "config_key": "interpreter_constraints",
          "default": ["CPython>=3.5"],
          "deprecated_message": null,
          "display_args": [
            "--setuptools-interpreter-constraints=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_SETUPTOOLS_INTERPRETER_CONSTRAINTS",
          "help": "Python interpreter constraints for this tool.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--setuptools-interpreter-constraints"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--interpreter-constraints"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["CPython>=3.5"]
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [],
      "description": "The Python setuptools library (https://github.com/pypa/setuptools).",
      "is_goal": false,
      "scope": "setuptools"
    },
    "source": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--source-root-patterns=\"[[\"pattern1\", \"pattern2\", ...], [\"pattern1\", \"pattern2\", ...], ...]\"",
          "config_key": "root_patterns",
          "default": ["/", "src", "src/python", "src/py"],
          "deprecated_message": null,
          "display_args": [
            "--source-root-patterns=\"[[\"pattern1\", \"pattern2\", ...], [\"pattern1\", \"pattern2\", ...], ...]\""
          ],
          "env_var": "PANTS_SOURCE_ROOT_PATTERNS",
          "help": "A list of source root suffixes. A directory with this suffix will be considered a potential source root. E.g., `src/python` will match `<buildroot>/src/python`, `<buildroot>/project1/src/python` etc. Prepend a `/` to anchor the match at the buildroot. E.g., `/src/python` will match `<buildroot>/src/python` but not `<buildroot>/project1/src/python`. A `*` wildcard will match a single path segment, e.g., `src/*` will match `<buildroot>/src/python` and `<buildroot>/src/rust`. Use `/` to signify that the buildroot itself is a source root. See https://www.pantsbuild.org/docs/source-roots.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--source-root-patterns"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--root-patterns"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["/", "src", "src/python", "src/py"]
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--source-marker-filenames=\"[filename, filename, ...]\"",
          "config_key": "marker_filenames",
          "default": [],
          "deprecated_message": null,
          "display_args": [
            "--source-marker-filenames=\"[filename, filename, ...]\""
          ],
          "env_var": "PANTS_SOURCE_MARKER_FILENAMES",
          "help": "The presence of a file of this name in a directory indicates that the directory is a source root. The content of the file doesn't matter, and may be empty. Useful when you can't or don't wish to centrally enumerate source roots via `root_patterns`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--source-marker-filenames"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--marker-filenames"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": ["create", "fail"],
          "comma_separated_choices": "create, fail",
          "comma_separated_display_args": "--source-unmatched=<str>",
          "config_key": "unmatched",
          "default": "create",
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--source-unmatched=<str>"],
          "env_var": "PANTS_SOURCE_UNMATCHED",
          "help": "Configures the behavior when sources are defined outside of any configured source root. `create` will cause a source root to be implicitly created at the definition location of the sources; `fail` will trigger an error.",
          "removal_hint": "The option `--source-unmatched` does not do anything. Pants will always fail if the source root does not exist.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--source-unmatched"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--unmatched"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "create"
              }
            ]
          }
        }
      ],
      "description": "Configuration for roots of source trees.",
      "is_goal": false,
      "scope": "source"
    },
    "sourcefile-validation": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--sourcefile-validation-config=\"{'key1': val1, 'key2': val2, ...}\"",
          "config_key": "config",
          "default": {},
          "deprecated_message": null,
          "display_args": [
            "--sourcefile-validation-config=\"{'key1': val1, 'key2': val2, ...}\""
          ],
          "env_var": "PANTS_SOURCEFILE_VALIDATION_CONFIG",
          "help": "\nConfig schema is as follows:\n\n{\n  'path_patterns': [\n    {\n      'name': path_pattern1',\n      'pattern': <path regex pattern>,\n      'inverted': True|False (defaults to False),\n      'content_encoding': <encoding> (defaults to utf8)\n    },\n    ...\n  ],\n  'content_patterns': [\n    {\n      'name': 'content_pattern1',\n      'pattern': <content regex pattern>,\n      'inverted': True|False (defaults to False)\n    }\n    ...\n  ],\n  'required_matches': {\n    'path_pattern1': [content_pattern1, content_pattern2],\n    'path_pattern2': [content_pattern1, content_pattern3],\n    ...\n  }\n}\n\nMeaning: if a file matches some path pattern, its content must match all\nthe corresponding content patterns.\n",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--sourcefile-validation-config"],
          "typ": "dict",
          "unscoped_cmd_line_args": ["--config"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": {}
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Configuration for source file validation.",
      "is_goal": false,
      "scope": "sourcefile-validation"
    },
    "subprocess-environment": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--subprocess-environment-env-vars=\"['<str>', '<str>', ...]\"",
          "config_key": "env_vars",
          "default": ["LANG", "LC_CTYPE", "LC_ALL"],
          "deprecated_message": null,
          "display_args": [
            "--subprocess-environment-env-vars=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_SUBPROCESS_ENVIRONMENT_ENV_VARS",
          "help": "Environment variables to set for process invocations. Entries are either strings in the form `ENV_VAR=value` to set an explicit value; or just `ENV_VAR` to copy the value from Pants's own environment.\n\nEach ENV_VAR must be one of `LANG`, `LC_CTYPE`, `LC_ALL`, `http_proxy`, `https_proxy`, `ftp_proxy`, `all_proxy`, `no_proxy`, `HTTP_PROXY`, `HTTPS_PROXY`, `FTP_PROXY`, `ALL_PROXY`, `NO_PROXY`, `REQUESTS_CA_BUNDLE`.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--subprocess-environment-env-vars"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--env-vars"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": ["LANG", "LC_CTYPE", "LC_ALL"]
              }
            ]
          }
        }
      ],
      "basic": [],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--subprocess-environment-lang=<str>",
          "config_key": "lang",
          "default": "en_US.UTF-8",
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--subprocess-environment-lang=<str>"],
          "env_var": "PANTS_SUBPROCESS_ENVIRONMENT_LANG",
          "help": "Override the `LANG` environment variable for any forked subprocesses.",
          "removal_hint": "Use the env_vars option in this scope instead.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--subprocess-environment-lang"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--lang"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "en_US.UTF-8"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--subprocess-environment-lc-all=<str>",
          "config_key": "lc_all",
          "default": null,
          "deprecated_message": "Deprecated, will be removed in version: 2.1.0.dev0",
          "display_args": ["--subprocess-environment-lc-all=<str>"],
          "env_var": "PANTS_SUBPROCESS_ENVIRONMENT_LC_ALL",
          "help": "Override the `LC_ALL` environment variable for any forked subprocesses.",
          "removal_hint": "Use the env_vars option in this scope instead.",
          "removal_version": "2.1.0.dev0",
          "scoped_cmd_line_args": ["--subprocess-environment-lc-all"],
          "typ": "str",
          "unscoped_cmd_line_args": ["--lc-all"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              }
            ]
          }
        }
      ],
      "description": "Environment settings for forked subprocesses.",
      "is_goal": false,
      "scope": "subprocess-environment"
    },
    "test": {
      "advanced": [],
      "basic": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]test-debug",
          "config_key": "debug",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]test-debug"],
          "env_var": "PANTS_TEST_DEBUG",
          "help": "Run tests sequentially in an interactive process. This is necessary, for example, when you add breakpoints to your code.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--test-debug", "--no-test-debug"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--debug", "--no-debug"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]test-force",
          "config_key": "force",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]test-force"],
          "env_var": "PANTS_TEST_FORCE",
          "help": "Force the tests to run, even if they could be satisfied from cache.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--test-force", "--no-test-force"],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--force", "--no-force"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": ["all", "failed", "none"],
          "comma_separated_choices": "all, failed, none",
          "comma_separated_display_args": "--test-output=<ShowOutput>",
          "config_key": "output",
          "default": "failed",
          "deprecated_message": null,
          "display_args": ["--test-output=<ShowOutput>"],
          "env_var": "PANTS_TEST_OUTPUT",
          "help": "Show stdout/stderr for these tests.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--test-output"],
          "typ": "ShowOutput",
          "unscoped_cmd_line_args": ["--output"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "failed"
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]test-use-coverage",
          "config_key": "use_coverage",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]test-use-coverage"],
          "env_var": "PANTS_TEST_USE_COVERAGE",
          "help": "Generate a coverage report if the test runner supports it.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--test-use-coverage",
            "--no-test-use-coverage"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--use-coverage", "--no-use-coverage"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]test-open-coverage",
          "config_key": "open_coverage",
          "default": false,
          "deprecated_message": null,
          "display_args": ["--[no-]test-open-coverage"],
          "env_var": "PANTS_TEST_OPEN_COVERAGE",
          "help": "If a coverage report file is generated, open it on the local system if the system supports this.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--test-open-coverage",
            "--no-test-open-coverage"
          ],
          "typ": "bool",
          "unscoped_cmd_line_args": ["--open-coverage", "--no-open-coverage"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--test-extra-env-vars=\"['<str>', '<str>', ...]\"",
          "config_key": "extra_env_vars",
          "default": [],
          "deprecated_message": null,
          "display_args": ["--test-extra-env-vars=\"['<str>', '<str>', ...]\""],
          "env_var": "PANTS_TEST_EXTRA_ENV_VARS",
          "help": "Additional environment variables to include in test processes. Entries are strings in the form `ENV_VAR=value` to use explicitly; or just `ENV_VAR` to copy the value of a variable in Pants's own environment.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--test-extra-env-vars"],
          "typ": "list",
          "unscoped_cmd_line_args": ["--extra-env-vars"],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Run tests.",
      "is_goal": true,
      "scope": "test"
    },
    "typecheck": {
      "advanced": [],
      "basic": [],
      "deprecated": [],
      "description": "Run type checkers.",
      "is_goal": true,
      "scope": "typecheck"
    },
    "validate": {
      "advanced": [],
      "basic": [
        {
          "choices": ["none", "summary", "nonmatching", "names", "all"],
          "comma_separated_choices": "none, summary, nonmatching, names, all",
          "comma_separated_display_args": "--validate-detail-level=<DetailLevel>",
          "config_key": "detail_level",
          "default": "nonmatching",
          "deprecated_message": null,
          "display_args": ["--validate-detail-level=<DetailLevel>"],
          "env_var": "PANTS_VALIDATE_DETAIL_LEVEL",
          "help": "How much detail to emit to the console.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": ["--validate-detail-level"],
          "typ": "DetailLevel",
          "unscoped_cmd_line_args": ["--detail-level"],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "nonmatching"
              }
            ]
          }
        }
      ],
      "deprecated": [],
      "description": "Validate sources against regexes.",
      "is_goal": true,
      "scope": "validate"
    }
  }
}
